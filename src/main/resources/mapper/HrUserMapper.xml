<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.nado.rlzy.db.mapper.HrUserMapper">
    <resultMap id="BaseResultMap" type="com.nado.rlzy.db.pojo.HrUser">
        <id column="Id" property="id" jdbcType="INTEGER"/>
        <id column="userId" property="userId" jdbcType="INTEGER"/>
        <result column="UserName" property="userName" jdbcType="VARCHAR"/>
        <result column="RoleId" property="roleId" jdbcType="INTEGER"/>
        <result column="interfaceId" property="interfaceId" jdbcType="INTEGER"/>
        <result column="Password" property="password" jdbcType="VARCHAR"/>
        <result column="net_ease_token" property="netEaseToken" jdbcType="VARCHAR"/>
        <result column="HeadImage" property="headImage" jdbcType="VARCHAR"/>
        <result column="PostIdStr" property="postIdStr" jdbcType="VARCHAR"/>
        <result column="postName" property="postName" jdbcType="VARCHAR"/>
        <result column="Mobile" property="mobile" jdbcType="VARCHAR"/>
        <result column="IdCard" property="idCard" jdbcType="VARCHAR"/>
        <result column="education" property="education" jdbcType="VARCHAR"/>
        <result column="educationId" property="educationId" jdbcType="INTEGER"/>
        <result column="profession" property="profession" jdbcType="VARCHAR"/>
        <result column="professionId" property="professionId" jdbcType="INTEGER"/>
        <result column="graduationTime" property="graduationTime" jdbcType="VARCHAR"/>
        <result column="arrivalTime" property="arrivalTime" jdbcType="VARCHAR"/>
        <result column="RegisterTime" property="registerTime" jdbcType="TIMESTAMP"/>
        <result column="expectedSalaryUpper" property="expectedSalaryUpper" jdbcType="DECIMAL"/>
        <result column="expectedSalaryLower" property="expectedSalaryLower" jdbcType="DECIMAL"/>
        <result column="GroupName" property="groupName" jdbcType="VARCHAR"/>
        <result column="RecommendNo" property="recommendNo" jdbcType="INTEGER"/>
        <result column="recommendNoString" property="recommendNoString" jdbcType="VARCHAR"/>
        <result column="recommendNumber" property="recommendNumber" jdbcType="INTEGER"/>
        <result column="recommendNoId" property="recommendNoId" jdbcType="INTEGER"/>
        <result column="RecommendInfo" property="recommendInfo" jdbcType="VARCHAR"/>
        <result column="sex" property="sex" jdbcType="INTEGER"/>
        <result column="LoginIp" property="loginIp" jdbcType="VARCHAR"/>
        <result column="LoginTime" property="loginTime" jdbcType="TIMESTAMP"/>
        <result column="type" property="type" jdbcType="INTEGER"/>
        <result column="isPublic" property="publicIs" jdbcType="INTEGER"/>
        <result column="agreeHelp" property="agreeHelp" jdbcType="INTEGER"/>
        <result column="agreeHelp" property="violationRecord" jdbcType="VARCHAR"/>
        <result column="jobSeeker" property="jobSeeker" jdbcType="INTEGER"/>
        <result column="violationRecord" property="violationRecord" jdbcType="VARCHAR"/>
        <result column="violation_flag" property="violationFlag" jdbcType="VARCHAR"/>
        <result column="violation_time" property="violationTime" jdbcType="TIMESTAMP"/>
        <result column="usId" property="userId" jdbcType="INTEGER"/>
        <result column="briefId" property="briefChapterId" jdbcType="INTEGER"/>
        <result column="improve_information" property="improveInformation" jdbcType="INTEGER"/>
        <result column="pId" property="pid" jdbcType="INTEGER"/>
        <result column="groupId" property="groupId" jdbcType="INTEGER"/>
        <collection property="signUp" resultMap="resultMap" ofType="com.nado.rlzy.db.pojo.HrSignUp"/>
        <collection property="groups" resultMap="resultMap" ofType="com.nado.rlzy.db.pojo.HrSignUp"/>
        <collection property="deliveryrecords" resultMap="deliveryrecordsMap"
                    ofType="com.nado.rlzy.db.pojo.HrSignupDeliveryrecord"/>
    </resultMap>
    <resultMap id="groups" type="com.nado.rlzy.db.pojo.HrGroup">
        <result column="GroupName" property="groupname" jdbcType="VARCHAR"/>

    </resultMap>
    <resultMap id="resultMap" type="com.nado.rlzy.db.pojo.HrSignUp">
        <result column="user_name" property="userName" jdbcType="VARCHAR"/>
        <result column="user_id" property="userId" jdbcType="INTEGER"/>
    </resultMap>
    <resultMap id="deliveryrecordsMap" type="com.nado.rlzy.db.pojo.HrSignupDeliveryrecord">
        <result column="job_status" property="jobStatus" jdbcType="INTEGER"/>
        <result column="no_report_reason" property="noReportReason" jdbcType="INTEGER"/>
    </resultMap>

    <update id="editPersonData" parameterType="com.nado.rlzy.db.pojo.HrUser">
        update hr_user
        <set>
            <if test="userName != null and '' != userName">
                UserName = #{userName},
            </if>
            <if test="roleId != null">
                RoleId = #{roleId,jdbcType=INTEGER},
            </if>
            <if test="password != null and '' != password">
                Password = #{password,jdbcType=VARCHAR},
            </if>
            <if test="headImage != null and '' != headImage">
                HeadImage = #{headImage,jdbcType=VARCHAR},
            </if>
            <if test="postIdStr != null and '' != postIdStr">
                PostIdStr = #{postIdStr,jdbcType=VARCHAR},
            </if>
            <if test="mobile != null and '' != mobile">
                Mobile = #{mobile,jdbcType=VARCHAR},
            </if>
            <if test="idCard != null and '' != idCard">
                IdCard = #{idCard,jdbcType=VARCHAR},
            </if>
            <if test="registerTime != null">
                RegisterTime = #{registerTime,jdbcType=TIMESTAMP},
            </if>
            <if test="recommendNo != null">
                RecommendNo = #{recommendNo,jdbcType=INTEGER},
            </if>
            <if test="null != expectedSalary">
                expectedSalary = #{expectedSalary}
            </if>

            <if test="recommendInfo != null and '' != recommendInfo">
                RecommendInfo = #{recommendInfo,jdbcType=VARCHAR},
            </if>
            <if test="recommenderId != null">
                RecommenderId = #{recommenderId,jdbcType=INTEGER},
            </if>
            <if test="loginIp != null and '' != loginIp">
                LoginIp = #{loginIp,jdbcType=VARCHAR},
            </if>
            <if test="loginTime != null">
                LoginTime = #{loginTime,jdbcType=TIMESTAMP},
            </if>

            <if test="type != null">
                type = #{type,jdbcType=INTEGER},
            </if>
            <if test="publicIs != null">
                isPublic = #{publicIs,jdbcType=INTEGER},
            </if>
            <if test="status != null">
                status = #{status}
            </if>
        </set>
        <where>
            <if test="null != userId">
                id = #{userId}
            </if>
            <if test="null != typeId">
                and type = #{typeId}
            </if>

        </where>
    </update>
    <update id="changePassword">
        update hr_user
        <set>
            Password = #{password}
        </set>
        where status = 0
        <if test="null != userId">
            and Id = #{userId}
        </if>
        <if test="null != phone">
            and mobile = #{phone}
        </if>
    </update>
    <update id="switchIdentity">
        update hr_user
        <set>
            status = 1
        </set>
        <where>
            <if test="null != userId">
                Id = #{userId}
            </if>
        </where>

    </update>
    <update id="updateViolationFlag" parameterType="hrUser">
        update hr_user
        <set>
            violation_flag = 1
        </set>
        <where>
            status = 0
            <if test="null != userId">
                and Id = #{userId}
            </if>
        </where>
    </update>
    <update id="updateNetEaseTokenByserId">
        update hr_user set net_ease_token = #{netEaseToekn} where status = 0
        <if test="null != userId">
            and id = #{userId}
        </if>
    </update>
    <update id="forgetPassword">
        update hr_user
        <set>
            <if test="null != password">
                Password = #{password}
            </if>
        </set>
        where status = 0
        <if test="null != phone">
            and Mobile = #{phone}
        </if>
    </update>

    <select id="getUserByMobile" resultMap="BaseResultMap" parameterType="map">
        select id,
        userName as userName,
        headImage as headImage,
        Password as password,
        postIdStr as postIdStr,
        mobile as mobile,
        idCard as idCard,
        type as type,
        RecommendNo as recommendNo,
        RecommendInfo as recommendInfo
        from HR_User
        <where>
            <if test="null != phone and '' != phone">
                mobile = #{mobile}
            </if>
            and status = 0
        </where>


    </select>


    <select id="getUserByMobileAndPwd" resultMap="BaseResultMap">
        select id,
        userName,
        headImage,
        postIdStr,
        Password as password,
        mobile,
        idCard,
        type,
        RecommendNo as recommendNo,
        RecommendInfo as recInfo
        from hr_user
        where mobile= #{mobile} and password =#{password} and status = 0
    </select>
    <select id="getPassword" resultType="string">
        select Password from hr_user where Mobile = #{phone} and status = 0
    </select>
    <select id="queryUserByPhone" resultType="com.nado.rlzy.db.pojo.HrUser">
        select * from hr_user
        <where>
            status = 0
            <if test="null != phone">
                and Mobile = #{phone}
            </if>
            and status = 0
        </where>
    </select>
    <select id="selectReferrerInfo" resultMap="BaseResultMap">
        select u.UserName,
        u.RecommendNo,
        u.PostIdStr,
        u.RecommendInfo,
        si.user_name,
        sd.status,
        si.user_id,
        si.id as signUpId,
        sd.no_report_reason,
        u.Id
        from hr_user u
        left join hr_signup si on si.user_id = u.id and si.delete_flag = 0
        left join hr_signup_deliveryrecord sd on si.id = sd.signup_id and sd.delete_flag = 0
        <where>
            u.status = 0
            <if test="null != userId">
                and u.id = #{userId}
            </if>
            <if test="null != typeId">
                and u.type = 2;
            </if>
        </where>
    </select>
    <select id="finrdUserById" resultMap="BaseResultMap">
        select * from hr_user where status = 0
        <if test="null != userId">
            and Id = #{userId}
        </if>
        status = 0

    </select>

    <select id="personalInformationReferrer" resultMap="BaseResultMap">
        select u.HeadImage,
        u.Id as userId,
        u.type,
        u.UserName,
        u.IdCard,
        (SELECT GROUP_CONCAT(d.name)
        FROM hr_dictionary_item d
        WHERE FIND_IN_SET(d.value, u.PostIdStr)
        and d.pId = 1) as postName,
        u.PostIdStr,
        (SELECT GROUP_CONCAT(d.name)
        FROM hr_dictionary_item d
        WHERE FIND_IN_SET(d.value, u.RecommendNo)
        and d.pId = 30) as recommendNumber,
        u.RecommendNo as recommendNoId,
        u.RecommendInfo,
        u.isPublic,
        u.agreeHelp
        from hr_user u
        <where>
            u.status = 0
            and u.type = 2
            and u.status = 0
            <if test="null != userId">
                and u.Id = #{userId}
            </if>
        </where>
    </select>

    <select id="personalInformation" resultMap="BaseResultMap">
        select u.Id as userId,
        u.UserName,
        u.HeadImage,
        u.sex,
        u.IdCard,
        (SELECT GROUP_CONCAT(d.name)
        FROM hr_dictionary_item d
        WHERE FIND_IN_SET(d.value, u.education)
        and d.pId = 2) as education,
        u.education as educationId,
        u.graduationTime,
        (SELECT GROUP_CONCAT(d.name)
        FROM hr_dictionary_item d
        WHERE FIND_IN_SET(d.value, u.profession)
        and d.pId = 3) as profession,
        u.profession as professionId,
        (SELECT GROUP_CONCAT(d.name)
        FROM hr_dictionary_item d
        WHERE FIND_IN_SET(d.value, u.PostIdStr)
        and d.pId = 1) as postName,
        u.PostIdStr,
        u.arrivalTime,
        u.expectedSalaryLower,
        u.expectedSalaryUpper,
        u.isPublic,
        u.agreeHelp,
        (SELECT GROUP_CONCAT(d.name)
        FROM hr_dictionary_item d
        WHERE FIND_IN_SET(d.value, u.PostIdStr)
        and d.pId = 1) as postId
        from hr_user u
        <where>
            u.status = 0

            and u.type = 1
            <if test="null != userId">
                and u.Id = #{userId}
            </if>
        </where>
    </select>
    <select id="selectReferrer" resultMap="BaseResultMap" parameterType="com.nado.rlzy.bean.query.ReferrerQuery">
        select u.UserName,
        u.id as userId,
        (SELECT GROUP_CONCAT(d.name)
        FROM hr_dictionary_item d
        WHERE FIND_IN_SET(d.value, u.PostIdStr)
        and d.pId = 1) as postName,
        (SELECT GROUP_CONCAT(d.name)
        FROM hr_dictionary_item d
        WHERE FIND_IN_SET(d.value, u.RecommendNo)
        and d.pId = 30) as recommendNoString
        from hr_user u
        left join user_login_quit ulq on u.id = ulq.user_id
        and ulq.delete_flag = 0
        where u.status = 0
        and u.type = 2
        <if test="null != recommendNo">
            and u.RecommendNo = #{recommendNo}
        </if>
        <if test="null != postId">
            and u.PostIdStr like concat('%', #{postId}, '%');
        </if>
        order by ulq.type desc
    </select>
    <select id="selectReferrerDetails" resultMap="BaseResultMap"
            parameterType="com.nado.rlzy.bean.query.JobListQuery">
        select u.UserName,
        u.RecommendNo,
        u.Id,
        (SELECT GROUP_CONCAT(d.name)
        FROM hr_dictionary_item d
        WHERE FIND_IN_SET(d.value, u.PostIdStr)
        and d.pId = 1) as postName,
        u.RecommendInfo
        from hr_user u
        left join hr_signup si on u.id = si.user_id and si.delete_flag = 0
        where u.status = 0
        <if test="null != userId">
            and u.id = #{userId}
        </if>
        group by u.Id;
    </select>
    <select id="jobSeeker" resultType="_int">
        select count(si.user_name) as jobSeeker
        from hr_user u
        left join hr_signup si on u.id = si.user_id and si.delete_flag = 0
        where u.status = 0
        <if test="null != userId">
            and u.id = #{userId}
        </if>
    </select>

    <select id="interviewed" resultType="_int">
        select count(si.user_name) as interviewed
        from hr_signup si
        left join hr_signup_deliveryrecord hsd
        on si.id = hsd.signup_id and hsd.delete_flag = 0
        left join hr_user u on si.user_id = u.id and u.status = 0
        where si.delete_flag = 0 and hsd.status = 10
        <if test="null != userId">
            and u.Id = #{userId}
        </if>
    </select>
    <select id="arReported" resultType="_int">
        select count(si.user_name) as reported
        from hr_signup si
        left join hr_signup_deliveryrecord hsd
        on si.id = hsd.signup_id
        left join hr_user u on si.user_id = u.id and u.status = 0
        where hsd.status = 11
        <if test="null != userId">
            and u.Id = #{userId}
        </if>
    </select>
    <select id="noInterview" resultType="_int">
        select count(si.user_name) as noInterview
        from hr_signup si
        left join hr_signup_deliveryrecord hsd
        on si.id = hsd.signup_id
        left join hr_user u on si.user_id = u.id and u.status = 0
        where hsd.status = 8
        <if test="null != userId">
            and u.Id = #{userId}
        </if>
    </select>
    <select id="noReported" resultType="_int">
        select count(si.user_name) as noReported
        from hr_signup si
        left join hr_signup_deliveryrecord hsd
        on si.id = hsd.signup_id
        left join hr_user u on si.user_id = u.id and u.status = 0
        where hsd.status = 9
        <if test="null != userId">
            and u.Id = #{userId}
        </if>


    </select>
    <select id="collectReferrer" resultType="hrUser">
        select uu.UserName,
        uu.id,
        (SELECT GROUP_CONCAT(d.name)
        FROM hr_dictionary_item d
        WHERE FIND_IN_SET(d.value, uu.PostIdStr)
        and d.pId = 1) as postName,
        uu.RecommendNo
        from collect c,
        hr_user u,
        hr_user uu
        where c.user_id = u.id
        and u.status = 0
        and c.recruiter_id = uu.Id
        and uu.status = 0
        <if test="null != userId">
            and c.user_id = #{userId}
        </if>
        and c.recruiter_id is not null;
    </select>
    <select id="queryMyselfVillation" resultMap="BaseResultMap">
        select hsd.status, u.UserName, gr.GroupName, u.violation_flag, u.violation_time, u.Id, si.id, hsd.id, br.id,
        gr.Id
        from hr_user u
        left join hr_signup si on si.user_id = u.id and si.delete_flag = 0
        left join hr_signup_deliveryrecord hsd on si.id = hsd.signup_id and hsd.delete_flag = 0
        left join hr_briefchapter br on br.id = hsd.brief_chapter_id and br.briefChapterStatus = 0 and br.Status = 1
        left join hr_group gr on br.RecruitedCompanyId = gr.Id and gr.groupStatus = 0
        where u.status = 0
        <if test="null != userId">
            and u.Id = #{userId}
        </if>
    </select>
    <select id="queryReferrerVillation" resultMap="BaseResultMap">
        select hsd.status,
        u.UserName,
        gr.GroupName,
        u.violation_flag,
        hsd.status,
        hsd.brief_chapter_id as briefId,
        si.user_id as usId,
        u.violation_time
        from hr_user u
        left join hr_signup si on si.user_id = u.id and si.delete_flag = 0
        left join hr_signup_deliveryrecord hsd on si.id = hsd.signup_id and hsd.delete_flag = 0
        left join hr_briefchapter br on br.id = hsd.brief_chapter_id and br.briefChapterStatus = 0 and br.Status = 1
        left join hr_group gr on br.RecruitedCompanyId = gr.Id and gr.groupStatus = 0
        where u.status = 0
        <if test="null != userId">
            and u.Id = #{userId}
        </if>
        group by gr.GroupName
    </select>


    <select id="queryJobStatus" resultMap="BaseResultMap">
        select hsd.status
        from hr_signup si
        left join hr_signup_deliveryrecord hsd on si.id = hsd.signup_id and hsd.delete_flag = 0
        left join hr_briefchapter br on hsd.brief_chapter_id = br.id and br.briefChapterStatus = 0 and br.Status = 1
        <if test="null != userId">
            where si.user_id = #{userId}
        </if>
        <if test="null != briefChapterId">
            and hsd.brief_chapter_id = #{briefChapterId}
        </if>
    </select>
    <select id="login" resultMap="BaseResultMap">
        select Id, improve_information, violation_flag, violation_time, net_ease_token, pId from hr_user where status =
        0
        <if test="null != phone">
            and Mobile = #{phone}
        </if>
        <if test="null != password">
            and Password = #{password}
        </if>
    </select>
    <select id="selectPhoneByPhone" resultMap="BaseResultMap">
        select UserName, Mobile, Password from hr_user where status = 0
        <if test="null != phone">
            and Mobile = #{phone}
        </if>
    </select>
    <select id="queryUser" resultType="hrUser">
        select * from hr_user where status = 1
        <if test="null != phone">
            and Mobile = #{phone}
        </if>
        <if test="null != password">
            and Password = #{password}
        </if>
    </select>
    <select id="selectPlatformlack" resultType="_int">
        select count(u.IdCard)
        from hr_user u,
        hr_platformblacklist p
        where u.IdCard = p.idCard
        and u.status = 0
        <if test="null != userId">
            and u.Id = #{userId}
        </if>
    </select>
    <select id="selectplatformBlackRecruitmentEnd" resultType="_int">
        select count(g.socialCreditCode)
        from hr_user u,
        hr_group g,
        hr_platformblacklist p
        where u.id = g.CertifierId
        and g.socialCreditCode = p.socialCreditCode
        <if test="null != userId">
            and u.Id = #{userId}
        </if>
    </select>
    <select id="selectReferrerIntentionalPost" resultType="string">
        select PostIdStr from hr_user where status = 0
        <if test="null != userId">
            and Id = #{userId}
        </if>
    </select>
    <select id="selectAllInformation" resultMap="BaseResultMap">
        select * from hr_user where status = 0
        <if test="null != userId">
            and id = #{userId}
        </if>
    </select>
    <select id="loginSonAccountNumber" resultType="hrUser">
        select (SELECT GROUP_CONCAT(i.id)
        FROM hr_interface i
        WHERE FIND_IN_SET(i.id, r.power)) as interfaceId,
        u.Id,u.improve_information, u.violation_flag, u.violation_time, u.net_ease_token, u.pId
        from hr_user u
        left join hr_role r on u.RoleId = r.id
        where u.status = 0
        and u.pId is not null
        <if test="null != phone">
            and u.Mobile = #{phone}
        </if>
        <if test="null != password">
            and u.Password = #{password}
        </if>
    </select>
    <select id="selectHeadUserNameIdCard" resultMap="BaseResultMap">
        select UserName, HeadImage, IdCard from hr_user where status = 0 and id = #{userId}
    </select>
    <select id="checkUserIdentity" resultMap="BaseResultMap">
        select type from hr_user where status = 0
        <if test="null != userId">
            and Id = #{userId}
        </if>
    </select>
    <select id="subAccountPermission" resultMap="BaseResultMap">
        select (SELECT GROUP_CONCAT(i.id)
        FROM hr_interface i
        WHERE FIND_IN_SET(i.id, r.power)) as interfaceId,
        u.Id
        from hr_user u
        left join hr_role r on u.RoleId = r.id
        where u.status = 0
        <if test="null != userId">
            and u.Id = #{userId}
        </if>
    </select>
</mapper>