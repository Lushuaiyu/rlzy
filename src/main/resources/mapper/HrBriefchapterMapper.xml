<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.nado.rlzy.db.mapper.HrBriefchapterMapper">
    <resultMap id="BaseResultMap" type="com.nado.rlzy.db.pojo.HrBriefchapter">
        <id column="Id" property="id" jdbcType="INTEGER"/>
        <result column="RecruitedCompanyId" property="recruitedcompanyId" jdbcType="INTEGER"/>

        <result column="Name" property="postName" jdbcType="VARCHAR"/>
        <result column="PostId" property="postId" jdbcType="INTEGER"/>
        <result column="recruitingNo" property="recruitingNo" jdbcType="INTEGER"/>
        <result column="Rebate" property="rebate" jdbcType="INTEGER"/>
        <result column="avgSalary" property="avgSalary" jdbcType="INTEGER"/>
        <result column="detailSalary" property="detailSalary" jdbcType="VARCHAR"/>
        <result column="detailSalaryWay" property="detailSalaryWay" jdbcType="VARCHAR"/>
        <result column="hobby" property="hobbyId" jdbcType="VARCHAR"/>

        <result column="education" property="educationId" jdbcType="VARCHAR"/>
        <result column="profession" property="professionId" jdbcType="VARCHAR"/>

        <result column="experience" property="experienceId" jdbcType="VARCHAR"/>
        <result column="welfareId" property="welfareId" jdbcType="VARCHAR"/>
        <result column="postDetail" property="postDetail" jdbcType="VARCHAR"/>
        <result column="interviewTime" property="interviewTime" jdbcType="TIMESTAMP"/>
        <result column="interviewAddress" property="interviewAddress" jdbcType="VARCHAR"/>
        <result column="interviewAddressFlag" property="interviewAddressFlag" jdbcType="INTEGER"/>
        <result column="work_address" property="workAddress" jdbcType="VARCHAR"/>
        <result column="clothingReguiement" property="clothingReguirementId" jdbcType="VARCHAR"/>


        <result column="registerTime" property="registerTime" jdbcType="TIMESTAMP"/>
        <result column="contractWay" property="contractWay" jdbcType="INTEGER"/>
        <result column="signUpId" property="signUpId" jdbcType="INTEGER"/>

        <result column="contractStartTime" property="contractStartTime" jdbcType="TIMESTAMP"/>

        <result column="contractTime" property="contractTime" jdbcType="TIMESTAMP"/>

        <result column="contractWayDetailId" property="contractWayDetailId" jdbcType="INTEGER"/>

        <result column="hireWay" property="hireWay" jdbcType="INTEGER"/>
        <result column="userId" property="userId" jdbcType="INTEGER"/>
        <result column="Status" property="status" jdbcType="INTEGER"/>
        <result column="remark" property="remark" jdbcType="VARCHAR"/>
        <result column="workWay" property="workWayId" jdbcType="INTEGER"/>
        <result column="workTimeArrange" property="workTimeArrangeId" jdbcType="INTEGER"/>
        <result column="overtimeTime" property="overtimeTimeId" jdbcType="INTEGER"/>
        <result column="clothing_requirement_id" property="clothingReguirementId" jdbcType="VARCHAR"/>
        <result column="noEmployerAddress" property="noEmployerAddress" jdbcType="VARCHAR"/>


        <result column="CheckedTime" property="checkedtime" jdbcType="TIMESTAMP"/>
        <result column="readNum" property="readnum" jdbcType="INTEGER"/>
        <result column="manNum" property="manNum" jdbcType="INTEGER"/>
        <result column="womenNum" property="womenNum" jdbcType="INTEGER"/>
        <result column="manAgeId" property="manAgeId" jdbcType="INTEGER"/>
        <result column="Rebate" property="rebate" jdbcType="INTEGER"/>
        <result column="womenAgeId" property="womenAgeId" jdbcType="INTEGER"/>
        <result column="womenAgeId" property="womenAgeId" jdbcType="INTEGER"/>
        <result column="womenAge" property="womenAge" jdbcType="VARCHAR"/>
        <result column="manAge" property="manAge" jdbcType="VARCHAR"/>
        <result column="manAge" property="manAge" jdbcType="VARCHAR"/>
        <result column="women_num" property="womenNum" jdbcType="INTEGER"/>
        <result column="man_num" property="manNum" jdbcType="INTEGER"/>


        <result column="CreateTime" property="createtime" jdbcType="TIMESTAMP"/>
        <result column="DeleteFlag" property="deleteflag" jdbcType="TINYINT"/>
        <result column="postName" property="postName" jdbcType="VARCHAR"/>
        <result column="recruitedCompany" property="recruitedCompany" jdbcType="VARCHAR"/>
        <result column="certifier" property="certifier" jdbcType="VARCHAR"/>
        <result column="groupAddress" property="groupAddress" jdbcType="VARCHAR"/>

        <result column="groupAddress2" property="groupAddress2" jdbcType="VARCHAR"/>

        <result column="welfareId" property="welfareId" jdbcType="VARCHAR"/>
        <result column="welfare" property="welfare" jdbcType="VARCHAR"/>
        <result column="rebateStatus" property="rebateStatus" jdbcType="INTEGER"/>
        <result column="readNum" property="readNum" jdbcType="INTEGER"/>
        <result column="no_pass_reason" property="noPassReason" jdbcType="INTEGER"/>
        <result column="status" property="jobStatus" jdbcType="INTEGER"/>
        <result column="sex" property="sex" jdbcType="INTEGER"/>
        <result column="rebate_male_interview" property="rebateMaleInterview" jdbcType="DECIMAL"/>
        <result column="rebate_male_report" property="rebateMaleReport" jdbcType="DECIMAL"/>
        <result column="rebate_male_entry" property="rebateMaleEntry" jdbcType="DECIMAL"/>
        <result column="rebate_female_interview" property="rebateFemaleInterview" jdbcType="DECIMAL"/>
        <result column="rebate_female_report" property="rebateFemaleReport" jdbcType="DECIMAL"/>
        <result column="rebate_female_entry" property="rebateFemaleEntry" jdbcType="DECIMAL"/>
        <result column="rebate_time_entry" property="rebateTimeEntry" jdbcType="DECIMAL"/>


        <!--
                <association property="post" javaType="com.nado.rlzy.db.pojo.HrPost" >
                    <id column="Id" property="_id" jdbcType="INTEGER"/>
                    <result column="Name" property="postName" jdbcType="VARCHAR"/>

                </association>-->
        <collection property="rebat" resultMap="rebaterecord" ofType="com.nado.rlzy.db.pojo.HrRebaterecord"/>
        <collection property="rebateEntryResignation" resultMap="entryREsignation"
                    ofType="com.nado.rlzy.db.pojo.EntryResignation"/>

    </resultMap>

    <resultMap id="entryREsignation" type="com.nado.rlzy.db.pojo.EntryResignation">
        <result column="rebate_time" property="rebateTime" jdbcType="TIMESTAMP"/>
        <result column="rebateMaleEntry" property="rebateMaleEntry" jdbcType="DECIMAL"/>
        <result column="rebateFemaleEntry" property="rebateFemaleEntry" jdbcType="DECIMAL"/>
        <result column="brief_chapter_id" property="briefChapterId" jdbcType="INTEGER"/>
        <result column="id" property="id" jdbcType="INTEGER"/>
        <result column="type" property="type" jdbcType="INTEGER"/>
    </resultMap>
    <resultMap type="com.nado.rlzy.db.pojo.HrRebaterecord" id="rebaterecord">
        <result column="rebateOne" property="rebateOne" jdbcType="TIMESTAMP"/>
        <result column="sign_up_id" property="signUpId" jdbcType="TIMESTAMP"/>
        <result column="RebateType" property="rebateType" jdbcType="INTEGER"/>
        <result column="RebateTime" property="rebateTime" jdbcType="DATE"/>
        <result column="RebateMale" property="rebateMale" jdbcType="DECIMAL"/>
        <result column="RebateFemale" property="rebateFemale" jdbcType="DECIMAL"/>
        <result column="BriefChapterId" property="briefchapterId" jdbcType="INTEGER"/>
        <result column="CreateTime" property="createTime" jdbcType="INTEGER"/>
        <result column="status" property="status" jdbcType="INTEGER"/>
        <result column="rebStatus" property="statusTwo" jdbcType="INTEGER"/>
        <result column="rebateId" property="id" jdbcType="INTEGER"/>
    </resultMap>

    <!--<resultMap id="groupp" type="com.nado.rlzy.db.pojo.HrGroup">
        <result column="rebateOne" property="rebateOne" jdbcType="TIMESTAMP"/>

    </resultMap>-->
    <sql id="Base_Column_List">
        Id, RecruitedCompanyId, PostId, jobNatureId, RecruitingNo, avgSalary, detailSalary,
        detailSalaryWay, educationId, experienceId, welfareId, PostDetail, interviewTime,
        interviewAddress, registerTime, contractWay, contractTime, hireWay, Rebate, userId,
        Status, remark, CheckedTime, readNum, CreateTime, DeleteFlag, new_column
    </sql>
    <insert id="save" parameterType="com.nado.rlzy.db.pojo.HrBriefchapter" keyProperty="id"
            useGeneratedKeys="true">
        insert into hr_briefchapter
        <trim prefix="(" suffix=")" suffixOverrides=",">

            <if test="recruitedcompanyId != null">
                RecruitedCompanyId,
            </if>
            <if test="postId != null">
                PostId,
            </if>
            <if test="recruitingNo != null">
                RecruitingNo,
            </if>
            <if test="avgSalary != null">
                avgSalary,
            </if>
            <if test="detailSalary != null">
                detailSalary,
            </if>
            <if test="detailSalaryWay != null">
                detailSalaryWay,
            </if>
            <if test="educationId != null">
                educationId,
            </if>
            <if test="experienceId != null">
                experienceId,
            </if>
            <if test="welfareId != null">
                welfareId,
            </if>
            <if test="postDetail != null">
                PostDetail,
            </if>
            <if test="interviewTime != null">
                interviewTime,
            </if>
            <if test="interviewAddress != null and '' != interviewAddress">
                interview_address,
            </if>
            <if test="registerTime != null">
                registerTime,
            </if>
            <if test="contractWay != null">
                contractWay,
            </if>
            <if test="contractTime != null">
                contractTime,
            </if>
            <if test="hireWay != null">
                hireWay,
            </if>
            <if test="rebate != null">
                Rebate,
            </if>
            <if test="userId != null">
                userId,
            </if>
            <if test="status != null">
                Status,
            </if>
            <if test="null != briefChapterStatus">
                briefChapterStatus,
            </if>
            <if test="null != manNum">
                man_num,
            </if>
            <if test="null != womenNum">
                women_num,
            </if>
            <if test="null != manAgeId">
                man_age_id,
            </if>
            <if test="null != womenAgeId">
                women_age_id,
            </if>
            <if test="null != professionId">
                profession_id,
            </if>
            <if test="null != workWayId">
                work_way_id,
            </if>
            <if test="workTimeArrangeId">
                work_time_arrange_id,
            </if>
            <if test="null != clothingReguirementId">
                clothing_requirement_id,
            </if>
            <if test="null != workAddress">
                work_address,
            </if>
            <if test="null != hobbyId">
                hobby_id,
            </if>
            <if test="null != overtimeTimeId">
                overtime_times_id,
            </if>
            <if test="null != descriptionJobPhotoUrl">
                description_job_photo_url,
            </if>
            <if test="null != noEmployerAddress">
                no_employer_address,
            </if>
            <if test="null != employerCertificatePhotoUrl">
                employer_certificate_photo_url,
            </if>
            <if test="null != contractWayDetailId">
                contract_way_detail_id,
            </if>
            <if test="null != acceptRecommendedResume">
                accept_recommended_resume,
            </if>
            <if test="null != rebateMaleInterview">
                rebate_male_interview,
            </if>
            <if test="null != rebateMaleReport">
                rebate_male_report,
            </if>
            <if test="null != rebateMaleEntry">
                rebate_male_entry,
            </if>
            <if test="null != rebateFemaleInterview">
                rebate_female_interview,
            </if>
            <if test="null != rebateFemaleReport">
                rebate_female_report,
            </if>
            <if test="null != rebateFemaleEntry">
                rebate_female_entry,
            </if>
            <if test="null != rebateTimeEntry">
                rebate_time_entry,
            </if>

        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">

            <if test="recruitedcompanyId != null">
                #{recruitedcompanyId},
            </if>
            <if test="postId != null">
                #{postId},
            </if>
            <if test="recruitingNo != null">
                #{recruitingNo},
            </if>
            <if test="avgSalary != null">
                #{avgSalary},
            </if>
            <if test="detailSalary != null">
                #{detailSalary},
            </if>
            <if test="detailSalaryWay != null">
                #{detailSalaryWay},
            </if>
            <if test="educationId != null">
                #{educationId},
            </if>
            <if test="experienceId != null">
                #{experienceId},
            </if>
            <if test="welfareId != null">
                #{welfareId},
            </if>
            <if test="postDetail != null">
                #{postDetail},
            </if>
            <if test="interviewTime != null">
                #{interviewTime},
            </if>
            <if test="interviewAddress != null">
                #{interviewAddress},
            </if>
            <if test="registerTime != null">
                #{registerTime},
            </if>
            <if test="contractWay != null">
                #{contractWay},
            </if>
            <if test="contractTime != null">
                #{contractTime,jdbcType=VARCHAR},
            </if>
            <if test="hireWay != null">
                #{hireWay},
            </if>
            <if test="rebate != null">
                #{rebate},
            </if>
            <if test="userId != null">
                #{userId},
            </if>
            <if test="status != null">
                #{status},
            </if>
            <if test="null != briefChapterStatus">
                #{briefChapterStatus},
            </if>
            <if test="null != manNum">
                #{manNum},
            </if>
            <if test="null != womenNum">
                #{womenNum},
            </if>
            <if test="null != manAgeId">
                #{manAgeId},
            </if>
            <if test="null != womenAgeId">
                #{womenAgeId},
            </if>
            <if test="null != professionId">
                #{professionId},
            </if>
            <if test="null != workWayId">
                #{workWayId},
            </if>
            <if test="workTimeArrangeId">
                #{workTimeArrangeId},
            </if>
            <if test="null != clothingReguirementId">
                #{clothingReguirementId},
            </if>
            <if test="null != workAddress">
                #{workAddress},
            </if>
            <if test="null != hobbyId">
                #{hobbyId},
            </if>
            <if test="null != overtimeTimeId">
                #{overtimeTimeId},
            </if>
            <if test="null != descriptionJobPhotoUrl">
                #{descriptionJobPhotoUrl},
            </if>
            <if test="null != noEmployerAddress">
                #{noEmployerAddress},
            </if>
            <if test="null != employerCertificatePhotoUrl">
                #{employerCertificatePhotoUrl},
            </if>
            <if test="null != contractWayDetailId">
                #{contractWayDetailId},
            </if>
            <if test="null != acceptRecommendedResume">
                #{acceptRecommendedResume},
            </if>
            <if test="null != rebateMaleInterview">
                #{rebateMaleInterview},
            </if>
            <if test="null != rebateMaleReport">
                #{rebateMaleReport},
            </if>
            <if test="null != rebateMaleEntry">
                #{rebateMaleEntry},
            </if>
            <if test="null != rebateFemaleInterview">
                #{rebateFemaleInterview},
            </if>
            <if test="null != rebateFemaleReport">
                #{rebateFemaleReport},
            </if>
            <if test="null != rebateFemaleEntry">
                #{rebateFemaleEntry},
            </if>
            <if test="null != rebateTimeEntry">
                #{rebateTimeEntry},
            </if>


        </trim>
    </insert>
    <update id="update" parameterType="com.nado.rlzy.bean.query.ReleaseBriefcharpterQuery">
        update hr_briefchapter
        <set>
            <if test="recruitedCompanyId != null">
                recruitedCompanyId = #{recruitedCompanyId,jdbcType=INTEGER},
            </if>
            <if test="postId != null">
                PostId = #{postId,jdbcType=INTEGER},
            </if>
            <if test="null != recruitingNo">
                RecruitingNo = #{recruitingNo},
            </if>
            <if test="avgSalary != null">
                avgSalary = #{avgSalary,jdbcType=VARCHAR},
            </if>
            <if test="detailSalary != null">
                detailSalary = #{detailSalary,jdbcType=VARCHAR},
            </if>
            <if test="detailSalaryWay != null">
                detailSalaryWay = #{detailSalaryWay,jdbcType=VARCHAR},
            </if>
            <if test="educationId != null">
                educationId = #{educationId,jdbcType=VARCHAR},
            </if>
            <if test="experienceId != null">
                experienceId = #{experienceId,jdbcType=VARCHAR},
            </if>
            <if test="welfareId != null">
                welfareId = #{welfareId,jdbcType=VARCHAR},
            </if>
            <if test="postDetail != null">
                PostDetail = #{postDetail,jdbcType=VARCHAR},
            </if>

            <if test="interviewTime != null">
                interviewTime = #{interviewTime,jdbcType=VARCHAR},
            </if>
            <if test="interviewAddress != null">
                interview_address = #{interviewAddress,jdbcType=INTEGER},
            </if>
            <if test="registerTime != null">
                registerTime = #{registerTime,jdbcType=VARCHAR},
            </if>
            <if test="contractWay != null">
                contractWay = #{contractWay,jdbcType=INTEGER},
            </if>
            <if test="contractTime != null">
                contractTime = #{contractTime,jdbcType=VARCHAR},
            </if>
            <if test="hireWay != null">
                hireWay = #{hireWay,jdbcType=INTEGER},
            </if>
            <if test="rebate != null">
                Rebate = #{rebate,jdbcType=TINYINT},
            </if>
            <if test="userId != null">
                userId = #{userId,jdbcType=INTEGER},
            </if>
            <if test="status != null">
                Status = #{status,jdbcType=INTEGER},
            </if>
            <if test="null != manNum">
                man_num = #{manNum},
            </if>
            <if test="null != womenNum">
                women_num = #{womenNum},
            </if>
            <if test="null != manAgeId">
                man_age_id = #{manAgeId},
            </if>
            <if test="null != womenAgeId">
                women_age_id = #{womenAgeId},
            </if>
            <if test="null != professionId">
                profession_id = #{professionId},
            </if>
            <if test="null != workWayId">
                work_way_id = #{workWayId},
            </if>
            <if test="null != workTimeArrangeId">
                work_time_arrange_id = #{workTimeArrangeId},
            </if>
            <if test="null != clothingRequirementId">
                clothing_requirement_id = #{clothingRequirementId},
            </if>
            <if test="null != workAddress">
                work_address = #{workAddress},
            </if>
            <if test="null != hobbyId">
                hobby_id = #{hobbyId},
            </if>
            <if test="null != overtimeTimeId">
                overtime_times_id = #{overtimeTimeId},
            </if>
            <if test="null != descriptionJobPhotoUrl">
                description_job_photo_url = #{descriptionJobPhotoUrl},
            </if>
            <if test="null != noEmployerAddress">
                no_employer_address = #{noEmployerAddress},
            </if>
            <if test="null != employerCertificatePhotoUrl">
                employer_certificate_photo_url = #{employerCertificatePhotoUrl},
            </if>
            <if test="null != contractWayDetailId">
                contract_way_detail_id = #{contractWayDetailId},
            </if>
            <if test="null != acceptRecommendedResume">
                accept_recommended_resume = #{acceptRecommendedResume},
            </if>
            <if test="null != rebateMaleInterview">
                rebate_male_interview = #{rebateMaleInterview},
            </if>
            <if test="null != rebateMaleReport">
                rebate_male_report = #{rebateMaleReport} ,
            </if>
            <if test="null != rebateMaleEntry">
                rebate_male_entry = #{rebateMaleEntry},
            </if>
            <if test="null != rebateFemaleInterview">
                rebate_female_interview = #{rebateFemaleInterview},
            </if>
            <if test="null != rebateFemaleReport">
                rebate_female_report = #{rebateFemaleReport},
            </if>
            <if test="null != rebateFemaleEntry">
                rebate_female_entry = #{rebateFemaleEntry},
            </if>
            <if test="null != rebateTimeEntry">
                rebate_time_entry,
            </if>
        </set>
        where Id = #{id,jdbcType=INTEGER}
    </update>
    <update id="updateNumberRecruits">
        update hr_briefchapter
        <set>
            <if test="null != manNum">
                man_num = #{manNum},
            </if>
            <if test="null != womenNum">
                women_num = #{womenNum}
            </if>
            <where>
                briefChapterStatus = 0
                <if test="null != status">
                    and Status = #{status}
                </if>
                <if test="null != briefchapter">
                    and id = #{briefchapter}
                </if>
            </where>
        </set>

    </update>
    <update id="updateStatus">
        update hr_briefchapter
        <set>
            Status = 0
        </set>
        <where>
            briefChapterStatus = 0
            <if test="null != briefchapter">
                and Id = #{briefchapter}
            </if>
        </where>
    </update>
    <update id="remainingQuota">
        update hr_briefchapter
        <set>
            RecruitingNo = RecruitingNo - #{number}
        </set>
        <where>
            briefChapterStatus = 0
            <if test="null != briefchapter">
                and Id = #{briefchapter}
            </if>
        </where>
    </update>
    <update id="updateNumberOfRecruits" parameterType="com.nado.rlzy.bean.query.EditBriefchapterQuery">
        update hr_briefchapter
        <set>
            <if test="null != manNumNow">
                man_num = #{manNumNow},
            </if>

            <if test="null != womenNumNow">
                women_num = #{womenNumNow}
            </if>
        </set>
        <where>
            <if test="null != briefchapter">
                Id = #{briefchapter}
            </if>
        </where>
    </update>
    <update id="updateRebateEntry">
        <if test="null != rebateMaleEntry">
            update hr_briefchapter set rebate_male_entry = #{rebateMaleEntry},
        </if>
        <if test="null != rebateFemaleEntry">
            rebate_female_entry = #{rebateFemaleEntry}
        </if>
        where
        <if test="null != briefchapterId">
            Id = #{briefchapterId}
        </if>
    </update>
    <update id="updateRebateMoney" parameterType="com.nado.rlzy.bean.query.EditBriefchapterQuery">
        update hr_briefchapter
        <set>
            <if test="null != rebateMaleInterview">
                rebate_male_interview = rebate_male_interview + #{rebateMaleInterview},
            </if>
            <if test="null != rebateMaleReport">
                rebate_male_report = rebate_male_report + #{rebateMaleReport},
            </if>
            <if test="null != rebateMaleEntry">
                rebate_male_entry = rebate_male_entry + #{rebateMaleEntry},
            </if>
            <if test="null != rebateFemaleInterview">
                rebate_female_interview = rebate_female_interview + #{rebateFemaleInterview},
            </if>
            <if test="null != rebateFemaleReport">
                rebate_female_report = rebate_female_report + #{rebateFemaleReport},
            </if>
            <if test="null!= rebateFemaleEntry">
                rebate_female_entry = rebate_female_entry + #{rebateFemaleEntry}
            </if>
            <if test="null != manNumNow">
                man_num = #{manNumNow},
            </if>
            <if test="null != womenNumNow">
                women_num = #{womenNumNow}
            </if>
        </set>
        <where>
            <if test="null != briefchapter">
                Id = #{briefchapter}
            </if>
            and briefChapterStatus = 0
        </where>
    </update>
    <update id="updateRebateToNoRebate" parameterType="com.nado.rlzy.bean.query.EditBriefchapterQuery">
        update hr_briefchapter
        <set>
            <if test="null != rebateMaleInterview">
                rebate_male_interview = #{rebateMaleInterview},
            </if>
            <if test="null != rebateMaleReport">
                rebate_male_report = #{rebateMaleReport},
            </if>
            <if test="null != rebateMaleEntry">
                rebate_male_entry = #{rebateMaleEntry},
            </if>
            <if test="null != rebateFemaleInterview">
                rebate_female_interview = #{rebateFemaleInterview},
            </if>
            <if test="null != rebateFemaleReport">
                rebate_female_report = #{rebateFemaleReport},
            </if>
            <if test="null != rebateFentry">
                rebate_female_entry = #{rebateFemaleEntry},
            </if>
            <if test="null != rebate">
                Rebate = #{rebate}
            </if>
        </set>
        <where>
            <if test="null != briefchapter">
                Id = #{briefchapter}
            </if>
            and briefChapterStatus = 0
        </where>
    </update>
    <select id="queryBriefcharpterDtoByParams" resultMap="BaseResultMap"
            parameterType="com.nado.rlzy.bean.query.BriefcharpterQuery">
        select (SELECT GROUP_CONCAT(d.name)
        FROM hr_dictionary_item d
        WHERE FIND_IN_SET(d.value, br.PostId)
        and d.pId = 1) as postName,
        br.id,
        grr.GroupName as certifier,
        gr.GroupName as recruitedCompany,
        br.RecruitingNo as recruitingNo,
        gr.GroupAddress as groupAddress,
        br.avgSalary as avgSalary,
        br.Rebate,
        br.detailSalary as detailSalary,
        (SELECT GROUP_CONCAT(d.name)
        FROM hr_dictionary_item d
        WHERE FIND_IN_SET(d.value, br.detailSalaryWay)
        and d.pId = 23) as detailSalaryWay,
        br.rebate_male_interview,
        br.rebate_male_report,
        br.rebate_male_entry,
        br.rebate_female_interview,
        br.rebate_female_report,
        br.rebate_female_entry,
        (SELECT GROUP_CONCAT(d.name)
        FROM hr_dictionary_item d
        WHERE FIND_IN_SET(d.value, br.welfareId)
        and d.pId = 10) as welfareId,
        br.Rebate as rebateStatus
        from hr_briefchapter br
        left join hr_group grr on br.RecruitedCompanyId = grr.Id and grr.groupStatus = 0
        left join hr_group gr on br.userId = gr.CertifierId and gr.groupStatus = 0
        where br.briefChapterStatus = 0
        and grr.pid = gr.Id
        <if test="null != recruitedCompany and '' != recruitedCompany">
            and grr.GroupName like concat('%', #{recruitedCompany}, '%')
        </if>
        <if test="null != postName">
            and br.PostId in
            <foreach collection="postName" item="item" separator="," open="(" close=")">
                #{item}
            </foreach>
        </if>
        <if test="null != sex">
            and si.sex = #{sex}
        </if>
        <if test="null != age">
            and br.man_age_id = #{age}
        </if>
        <if test="null != manAgeId">
            and br.man_age_id = #{manAgeId}
        </if>
        <if test="null != womenAgeId">
            and br.women_age_id = #{womenAgeId}
        </if>
        <if test="null != contractWayDetailId">
            and br.contract_way_detail_id = #{contractWayDetailId}
        </if>
        <if test="null != professionId">
            and br.profession_id = #{professionId}
        </if>
        <if test="null != educationId and '' != educationId">
            and br.educationId like concat('%', #{educationId}, '%')
        </if>

        <if test="null != experienceId">
            and br.experienceId = #{experienceId}
        </if>
        <if test="null != workWayId">
            and br.work_way_id = #{workWayId}
        </if>
        <if test="null != workTimeArrangeId">
            and br.work_time_arrange_id = #{workTimeArrangeId}
        </if>
        <if test="null != clothingRequirementId">
            and br.clothing_requirement_id = #{clothingRequirementId}
        </if>
        <if test="null != workAddress and '' != workAddress">
            and br.work_address like concat('%', #{workAddress}, '%')
        </if>
        <if test="null != hobbyId and '' != hobbyId">
            and br.hobby_id like concat ('%', #{hobbyId}, '%')
        </if>
        <if test="null != overtimeTimeId ">
            and br.overtime_times_id = #{overtimeTimeId}
        </if>
        <if test="null != welfareId and '' != welfareId">
            and br.welfareId like concat('%', #{welfareId}, '%')
        </if>
        <if test="null != interviewStartTime and null != queryBriefcharpterDetileByParamsinterviewEndTime">
            and br.interviewTime between #{interviewStartTime} and #{interviewEndTime}
        </if>
        <if test="null != registerStartTime and null != registerEndTime">
            and br.registerTime between #{registerStartTime} and #{registerEndTime}
        </if>
        <if test="null != contractWay">
            and br.contractWay = #{contractWay}
        </if>
        <if test="null != expectedSalaryLower">
            and si.expected_salary_lower = #{expectedSalaryLower}
        </if>
        <if test="null != expectedSalaryUpper">
            and si.expected_salary_upper = #{expectedSalaryUpper}
        </if>
        <if test="null != educationId">
            and si.education = #{educationId}
        </if>

        order by br.CreateTime desc
    </select>
    <select id="queryCountByparams" resultType="_int"
            parameterType="com.nado.rlzy.bean.query.BriefcharpterQuery">
        select count(*)
        from hr_briefchapter br
        left join
        hr_group gr on br.userId = gr.CertifierId
        left join hr_group grr on br.RecruitedCompanyId = grr.Id
        left join hr_dictionary_item dii on br.PostId = dii.value and dii.status = 1 and dii.pId = 1
        left join hr_rebaterecord re on br.Id = re.BriefChapterId
        where br.briefChapterStatus = 0
        <if test="null != certifier and '' != certifier">
            and grr.GroupName = #{certifier}
        </if>
        <if test="null != postName and '' != postName">

            and po.Name = #{postName}
        </if>

    </select>


    <select id="queryBriefcharpterDetileByParams" resultMap="BaseResultMap"
            parameterType="com.nado.rlzy.bean.query.BriefcharpterQuery">
        select (SELECT GROUP_CONCAT(d.name)
        FROM hr_dictionary_item d
        WHERE FIND_IN_SET(d.value, br.PostId)
        and d.pId = 1) as postName,
        br.PostId,
        br.Id,
        grr.GroupName as recruitedCompany,
        gr.GroupName as certifier,
        br.RecruitingNo as recruitingNo,
        grr.GroupAddress as groupAddress,
        br.avgSalary as avgSalary,
        br.detailSalary as detailSalary,
        (SELECT GROUP_CONCAT(d.name)
        FROM hr_dictionary_item d
        WHERE FIND_IN_SET(d.value, br.detailSalaryWay)
        and d.pId = 23) as detailSalaryWay,
        br.hireWay as hireWay,
        (SELECT GROUP_CONCAT(d.name)
        FROM hr_dictionary_item d
        WHERE FIND_IN_SET(d.value, br.man_age_id)
        and d.pId = 5) as manAge,
        br.Rebate,
        gr.Id as groupId,
        (SELECT GROUP_CONCAT(d.name)
        FROM hr_dictionary_item d
        WHERE FIND_IN_SET(d.value, br.women_age_id)
        and d.pId = 9) as womenAge,
        (SELECT GROUP_CONCAT(d.name)
        FROM hr_dictionary_item d
        WHERE FIND_IN_SET(d.value, br.educationId)
        and d.pId = 2) as education,
        (SELECT GROUP_CONCAT(d.name)
        FROM hr_dictionary_item d
        WHERE FIND_IN_SET(d.value, br.experienceId)
        and d.pId = 12) as experience,
        (SELECT GROUP_CONCAT(d.name)
        FROM hr_dictionary_item d
        WHERE FIND_IN_SET(d.value, br.profession_id)
        and d.pId = 3) as profession,
        (SELECT GROUP_CONCAT(d.name)
        FROM hr_dictionary_item d
        WHERE FIND_IN_SET(d.value, br.work_way_id)
        and d.pId = 16) as workWay,
        (SELECT GROUP_CONCAT(d.name)
        FROM hr_dictionary_item d
        WHERE FIND_IN_SET(d.value, br.work_time_arrange_id)
        and d.pId = 17) as workTimeArrange,
        br.overtime_times_id as overtimeTime,
        (SELECT GROUP_CONCAT(d.name)
        FROM hr_dictionary_item d
        WHERE FIND_IN_SET(d.value, br.clothing_requirement_id)
        and d.pId = 14) as clothingReguiement,
        (SELECT GROUP_CONCAT(d.name)
        FROM hr_dictionary_item d
        WHERE FIND_IN_SET(d.value, br.hobby_id)
        and d.pId = 15) as hobby,
        br.no_employer_address as noEmployerAddress,
        br.PostDetail as postDetail,
        br.work_address,
        br.registerTime as registerTime,
        br.interview_address as interviewAddress,
        br.interviewTime,
        br.no_employer_address as noEmployerAddress,
        br.registerTime as registerTime,
        br.contractWay as contractWay,
        br.rebate_male_interview,
        br.rebate_male_report,
        br.rebate_female_interview,
        br.rebate_female_report,
        br.rebate_male_entry,
        br.rebate_female_entry,
        er.rebate_male_entry as rebateMaleEntry,
        er.rebate_female_entry as rebateFemaleEntry,
        er.rebate_time,
        er.id,
        (SELECT GROUP_CONCAT(d.name)
        FROM hr_dictionary_item d
        WHERE FIND_IN_SET(d.value, br.contract_way_detail_id)
        and d.pId = 13) as contractWayDetail,
        br.contract_start_time as contractStartTime,
        br.contractTime,
        br.readNum as readNum,
        (SELECT GROUP_CONCAT(d.name)
        FROM hr_dictionary_item d
        WHERE FIND_IN_SET(d.value, br.welfareId)
        and d.pId = 10) as welfareId,
        br.man_num,
        br.women_num,
        er.brief_chapter_id,
        er.rebate_time,
        er.type
        from hr_briefchapter br
        left join entry_resignation er on br.id = er.brief_chapter_id and er.delete_flag = 0 and er.type = 2
        left join hr_group grr on br.RecruitedCompanyId = grr.Id and grr.groupStatus = 0
        left join hr_group gr on br.userId = gr.CertifierId and gr.groupStatus = 0
        where br.briefChapterStatus = 0
        and grr.pid = gr.Id
        <if test="null != briefcharpterId">
            and br.Id = #{briefcharpterId}
        </if>
    </select>
    <select id="queryBriefcharpterByLongLive" resultMap="BaseResultMap"
            parameterType="com.nado.rlzy.bean.query.BriefcharpterQuery">
      select (SELECT GROUP_CONCAT(d.name)
        FROM hr_dictionary_item d
        WHERE FIND_IN_SET(d.value, br.PostId)
        and d.pId = 1) as postName,
        br.id,
        grr.GroupName as certifier,
        gr.GroupName as recruitedCompany,
        br.RecruitingNo as recruitingNo,
        gr.GroupAddress as groupAddress,
        br.avgSalary as avgSalary,
        br.Rebate,
        br.detailSalary as detailSalary,
        (SELECT GROUP_CONCAT(d.name)
        FROM hr_dictionary_item d
        WHERE FIND_IN_SET(d.value, br.detailSalaryWay)
        and d.pId = 23) as detailSalaryWay,

        br.rebate_male_interview,
        br.rebate_male_report,
        br.rebate_male_entry,
        br.rebate_female_interview,
        br.rebate_female_report,
        br.rebate_female_entry,
        (SELECT GROUP_CONCAT(d.name)
        FROM hr_dictionary_item d
        WHERE FIND_IN_SET(d.value, br.welfareId)
        and d.pId = 10) as welfareId,
        br.Rebate as rebateStatus
        from hr_briefchapter br
        left join hr_group grr on br.RecruitedCompanyId = grr.Id and grr.groupStatus = 0
        left join hr_group gr on br.userId = gr.CertifierId and gr.groupStatus = 0
        where br.briefChapterStatus = 0
        and grr.pid = gr.Id
        and br.work_time_arrange_id = 1

    </select>
    <select id="queryBriefcharpterByLongEat" resultMap="BaseResultMap"
            parameterType="com.nado.rlzy.bean.query.BriefcharpterQuery">
         select (SELECT GROUP_CONCAT(d.name)
        FROM hr_dictionary_item d
        WHERE FIND_IN_SET(d.value, br.PostId)
        and d.pId = 1) as postName,
        br.id,
        grr.GroupName as certifier,
        gr.GroupName as recruitedCompany,
        br.RecruitingNo as recruitingNo,
        gr.GroupAddress as groupAddress,
        br.avgSalary as avgSalary,
        br.Rebate,
        br.detailSalary as detailSalary,
        (SELECT GROUP_CONCAT(d.name)
        FROM hr_dictionary_item d
        WHERE FIND_IN_SET(d.value, br.detailSalaryWay)
        and d.pId = 23) as detailSalaryWay,

        br.rebate_male_interview,
        br.rebate_male_report,
        br.rebate_male_entry,
        br.rebate_female_interview,
        br.rebate_female_report,
        br.rebate_female_entry,
        (SELECT GROUP_CONCAT(d.name)
        FROM hr_dictionary_item d
        WHERE FIND_IN_SET(d.value, br.welfareId)
        and d.pId = 10) as welfareId,
        br.Rebate as rebateStatus
        from hr_briefchapter br
        left join hr_group grr on br.RecruitedCompanyId = grr.Id and grr.groupStatus = 0
        left join hr_group gr on br.userId = gr.CertifierId and gr.groupStatus = 0
        where br.briefChapterStatus = 0
        and grr.pid = gr.Id  and br.welfareId like concat('%', 1, '%')

    </select>
    <select id="recommendedFeeTop10" resultMap="BaseResultMap"
            parameterType="com.nado.rlzy.bean.query.BriefcharpterQuery">
        select (SELECT GROUP_CONCAT(d.name)
        FROM hr_dictionary_item d
        WHERE FIND_IN_SET(d.value, br.PostId)
        and d.pId = 1) as postName,
        br.id,
        grr.GroupName as certifier,
        gr.GroupName as recruitedCompany,
        br.RecruitingNo as recruitingNo,
        gr.GroupAddress as groupAddress,
        br.avgSalary as avgSalary,
        br.Rebate,
        br.detailSalary as detailSalary,
        (SELECT GROUP_CONCAT(d.name)
        FROM hr_dictionary_item d
        WHERE FIND_IN_SET(d.value, br.detailSalaryWay)
        and d.pId = 23) as detailSalaryWay,
        br.rebate_male_interview,
        br.rebate_male_report,
        br.rebate_male_entry,
        br.rebate_female_interview,
        br.rebate_female_report,
        br.rebate_female_entry,
        (SELECT GROUP_CONCAT(d.name)
        FROM hr_dictionary_item d
        WHERE FIND_IN_SET(d.value, br.welfareId)
        and d.pId = 10) as welfareId,
        br.Rebate as rebateStatus
        from hr_briefchapter br
        left join hr_group grr on br.RecruitedCompanyId = grr.Id and grr.groupStatus = 0
        left join hr_group gr on br.userId = gr.CertifierId and gr.groupStatus = 0
        where br.briefChapterStatus = 0
        and grr.pid = gr.Id
        order by br.CreateTime asc
        limit 0,10
    </select>
    <select id="studentDivision" resultMap="BaseResultMap"
            parameterType="com.nado.rlzy.bean.query.BriefcharpterQuery">

        select (SELECT GROUP_CONCAT(d.name)
        FROM hr_dictionary_item d
        WHERE FIND_IN_SET(d.value, br.PostId)
        and d.pId = 1) as postName,
        br.id,
        grr.GroupName as certifier,
        gr.GroupName as recruitedCompany,
        br.RecruitingNo as recruitingNo,
        gr.GroupAddress as groupAddress,
        br.avgSalary as avgSalary,
        br.Rebate,
        br.detailSalary as detailSalary,
        (SELECT GROUP_CONCAT(d.name)
        FROM hr_dictionary_item d
        WHERE FIND_IN_SET(d.value, br.detailSalaryWay)
        and d.pId = 23) as detailSalaryWay,

        br.rebate_male_interview,
        br.rebate_male_report,
        br.rebate_male_entry,
        br.rebate_female_interview,
        br.rebate_female_report,
        br.rebate_female_entry,
        (SELECT GROUP_CONCAT(d.name)
        FROM hr_dictionary_item d
        WHERE FIND_IN_SET(d.value, br.welfareId)
        and d.pId = 10) as welfareId,
        br.Rebate as rebateStatus
        from hr_briefchapter br
        left join hr_group grr on br.RecruitedCompanyId = grr.Id and grr.groupStatus = 0
        left join hr_group gr on br.userId = gr.CertifierId and gr.groupStatus = 0
        where br.briefChapterStatus = 0
        and grr.pid = gr.Id
        <if test="null!= contractWayDetailId1">
            and br.contract_way_detail_id in
            <foreach collection="contractWayDetailId1" item="item" separator="," open="(" close=")">
                #{item}
            </foreach>
        </if>
    </select>
    <select id="salaryLeaderboard" resultMap="BaseResultMap"
            parameterType="com.nado.rlzy.bean.query.BriefcharpterQuery">
       select (SELECT GROUP_CONCAT(d.name)
        FROM hr_dictionary_item d
        WHERE FIND_IN_SET(d.value, br.PostId)
        and d.pId = 1) as postName,
        br.id,
        grr.GroupName as certifier,
        gr.GroupName as recruitedCompany,
        br.RecruitingNo as recruitingNo,
        gr.GroupAddress as groupAddress,
        br.avgSalary as avgSalary,
        br.Rebate,
        br.detailSalary as detailSalary,
        (SELECT GROUP_CONCAT(d.name)
        FROM hr_dictionary_item d
        WHERE FIND_IN_SET(d.value, br.detailSalaryWay)
        and d.pId = 23) as detailSalaryWay,
        br.rebate_male_interview,
        br.rebate_male_report,
        br.rebate_male_entry,
        br.rebate_female_interview,
        br.rebate_female_report,
        br.rebate_female_entry,
        (SELECT GROUP_CONCAT(d.name)
        FROM hr_dictionary_item d
        WHERE FIND_IN_SET(d.value, br.welfareId)
        and d.pId = 10) as welfareId,
        br.Rebate as rebateStatus
        from hr_briefchapter br
        left join hr_group grr on br.RecruitedCompanyId = grr.Id and grr.groupStatus = 0
        left join hr_group gr on br.userId = gr.CertifierId and gr.groupStatus = 0
        where br.briefChapterStatus = 0
        and grr.pid = gr.Id
        order by br.avgSalary desc
    </select>
    <select id="directBusiness" resultMap="BaseResultMap"
            parameterType="com.nado.rlzy.bean.query.BriefcharpterQuery">
        select (SELECT GROUP_CONCAT(d.name)
        FROM hr_dictionary_item d
        WHERE FIND_IN_SET(d.value, br.PostId)
        and d.pId = 1) as postName,
        br.id,
        grr.GroupName as certifier,
        gr.GroupName as recruitedCompany,
        br.RecruitingNo as recruitingNo,
        gr.GroupAddress as groupAddress,
        br.avgSalary as avgSalary,
        br.Rebate,
        br.detailSalary as detailSalary,
        (SELECT GROUP_CONCAT(d.name)
        FROM hr_dictionary_item d
        WHERE FIND_IN_SET(d.value, br.detailSalaryWay)
        and d.pId = 23) as detailSalaryWay,

        br.rebate_male_interview,
        br.rebate_male_report,
        br.rebate_male_entry,
        br.rebate_female_interview,
        br.rebate_female_report,
        br.rebate_female_entry,
        (SELECT GROUP_CONCAT(d.name)
        FROM hr_dictionary_item d
        WHERE FIND_IN_SET(d.value, br.welfareId)
        and d.pId = 10) as welfareId,
        br.Rebate as rebateStatus
        from hr_briefchapter br
        left join hr_group grr on br.RecruitedCompanyId = grr.Id and grr.groupStatus = 0
        left join hr_group gr on br.userId = gr.CertifierId and gr.groupStatus = 0
        where br.briefChapterStatus = 0
        and grr.pid = gr.Id
        and br.contractWay = 1




    </select>
    <select id="directAdmission" resultMap="BaseResultMap"
            parameterType="com.nado.rlzy.bean.query.BriefcharpterQuery">
        select (SELECT GROUP_CONCAT(d.name)
        FROM hr_dictionary_item d
        WHERE FIND_IN_SET(d.value, br.PostId)
        and d.pId = 1) as postName,
        br.id,
        grr.GroupName as certifier,
        gr.GroupName as recruitedCompany,
        br.RecruitingNo as recruitingNo,
        gr.GroupAddress as groupAddress,
        br.avgSalary as avgSalary,
        br.Rebate,
        br.detailSalary as detailSalary,
        (SELECT GROUP_CONCAT(d.name)
        FROM hr_dictionary_item d
        WHERE FIND_IN_SET(d.value, br.detailSalaryWay)
        and d.pId = 23) as detailSalaryWay,

        br.rebate_male_interview,
        br.rebate_male_report,
        br.rebate_male_entry,
        br.rebate_female_interview,
        br.rebate_female_report,
        br.rebate_female_entry,
        (SELECT GROUP_CONCAT(d.name)
        FROM hr_dictionary_item d
        WHERE FIND_IN_SET(d.value, br.welfareId)
        and d.pId = 10) as welfareId,
        br.Rebate as rebateStatus
        from hr_briefchapter br
        left join hr_group grr on br.RecruitedCompanyId = grr.Id and grr.groupStatus = 0
        left join hr_group gr on br.userId = gr.CertifierId and gr.groupStatus = 0
        where br.briefChapterStatus = 0
        and grr.pid = gr.Id
         and (br.hireWay = 1
        or br.hireWay = 0)

    </select>
    <select id="recruitmentBrochureCollection" resultMap="BaseResultMap">
        select (SELECT GROUP_CONCAT(d.name)
        FROM hr_dictionary_item d
        WHERE FIND_IN_SET(d.value, br.PostId)
        and d.pId = 1) as postName,
        br.id,
        grr.GroupName as certifier,
        gr.GroupName as recruitedCompany,
        br.RecruitingNo as recruitingNo,
        gr.GroupAddress as groupAddress,
        br.avgSalary as avgSalary,
        br.Rebate,
        br.detailSalary as detailSalary,
        (SELECT GROUP_CONCAT(d.name)
        FROM hr_dictionary_item d
        WHERE FIND_IN_SET(d.value, br.detailSalaryWay)
        and d.pId = 23) as detailSalaryWay,

        br.rebate_male_interview,
        br.rebate_male_report,
        br.rebate_male_entry,
        br.rebate_female_interview,
        br.rebate_female_report,
        br.rebate_female_entry,
        (SELECT GROUP_CONCAT(d.name)
        FROM hr_dictionary_item d
        WHERE FIND_IN_SET(d.value, br.welfareId)
        and d.pId = 10) as welfareId,
        br.Rebate as rebateStatus,
        u.Id
        from collect c
        left join hr_user u on c.user_id = u.id and u.status = 0
        left join hr_briefchapter br on br.id = c.briefchapter_id and br.briefChapterStatus = 0
        left join hr_group grr on br.RecruitedCompanyId = grr.Id and grr.groupStatus = 0
        left join hr_group gr on br.userId = gr.CertifierId and gr.groupStatus = 0
        where br.briefChapterStatus = 0
        and grr.pid = gr.Id
        <if test="null != type">
            and u.type = #{type}
        </if>
        <if test="null != userId">
            and u.id = #{userId}
        </if>
        order by c.create_time desc

    </select>
    <select id="atThePosition" resultMap="BaseResultMap">
        select (SELECT GROUP_CONCAT(d.name)
        FROM hr_dictionary_item d
        WHERE FIND_IN_SET(d.value, br.PostId)
        and d.pId = 1) as postName,
        br.id,
        grr.GroupName as certifier,
        gr.GroupName as recruitedCompany,
        br.RecruitingNo as recruitingNo,
        gr.GroupAddress as groupAddress,
        br.avgSalary as avgSalary,
        br.Rebate,
        br.detailSalary as detailSalary,
        (SELECT GROUP_CONCAT(d.name)
        FROM hr_dictionary_item d
        WHERE FIND_IN_SET(d.value, br.detailSalaryWay)
        and d.pId = 23) as detailSalaryWay,

        br.rebate_male_interview,
        br.rebate_male_report,
        br.rebate_male_entry,
        br.rebate_female_interview,
        br.rebate_female_report,
        br.rebate_female_entry,
        (SELECT GROUP_CONCAT(d.name)
        FROM hr_dictionary_item d
        WHERE FIND_IN_SET(d.value, br.welfareId)
        and d.pId = 10) as welfareId,
        br.Rebate as rebateStatus
        from hr_briefchapter br
        left join hr_group grr on br.RecruitedCompanyId = grr.Id and grr.groupStatus = 0
        left join hr_group gr on br.userId = gr.CertifierId and gr.groupStatus = 0
        where br.briefChapterStatus = 0
        and grr.pid = gr.Id
        <if test="null != groupId">
            and gr.id = #{groupId}
        </if>
        order by br.CreateTime desc;
    </select>

    <select id="atThePositionRecruitment" resultMap="BaseResultMap">
        select (SELECT GROUP_CONCAT(d.name)
        FROM hr_dictionary_item d
        WHERE FIND_IN_SET(d.value, br.PostId)
        and d.pId = 1) as postName,
        br.id,
        gr.GroupName as certifier,
        br.RecruitingNo as recruitingNo,
        gr.GroupAddress as groupAddress,
        br.avgSalary as avgSalary,
        br.Rebate,
        br.detailSalary as detailSalary,
        (SELECT GROUP_CONCAT(d.name)
        FROM hr_dictionary_item d
        WHERE FIND_IN_SET(d.value, br.detailSalaryWay)
        and d.pId = 23) as detailSalaryWay,

        br.rebate_male_interview,
        br.rebate_male_report,
        br.rebate_male_entry,
        br.rebate_female_interview,
        br.rebate_female_report,
        br.rebate_female_entry,
        (SELECT GROUP_CONCAT(d.name)
        FROM hr_dictionary_item d
        WHERE FIND_IN_SET(d.value, br.welfareId)
        and d.pId = 10) as welfareId,
        br.Rebate as rebateStatus
        from hr_briefchapter br
        left join hr_group gr on br.userId = gr.CertifierId and gr.groupStatus = 0
        where br.briefChapterStatus = 0
        and gr.type = 1
        <if test="null != groupId">
            and gr.Id = #{groupId}
        </if>
    </select>

    <select id="queryBriefchapterBySignUpStatus" resultMap="BaseResultMap">
        select (SELECT GROUP_CONCAT(d.name)
        FROM hr_dictionary_item d
        WHERE FIND_IN_SET(d.value, br.PostId)
        and d.pId = 1) as postName,
        br.id,
        grr.GroupName as certifier,
        gr.GroupName as recruitedCompany,
        br.RecruitingNo as recruitingNo,
        gr.GroupAddress as groupAddress,
        br.avgSalary as avgSalary,
        br.Rebate,
        br.detailSalary as detailSalary,
        (SELECT GROUP_CONCAT(d.name)
        FROM hr_dictionary_item d
        WHERE FIND_IN_SET(d.value, br.detailSalaryWay)
        and d.pId = 23) as detailSalaryWay,
        br.rebate_male_interview,
        br.rebate_male_report,
        br.rebate_male_entry,
        br.rebate_female_interview,
        br.rebate_female_report,
        br.rebate_female_entry,
        (SELECT GROUP_CONCAT(d.name)
        FROM hr_dictionary_item d
        WHERE FIND_IN_SET(d.value, br.welfareId)
        and d.pId = 10) as welfareId,
        br.Rebate as rebateStatus,
        sd.status,
        br.interviewTime,
        br.registerTime,
        sd.no_pass_reason,
        re.RebateFemale,
        re.RebateMale,
        re.RebateTime,
        re.status as rebStatus,
        re.sign_up_id,
        re.Id as rebateId
        from hr_briefchapter br
        left join hr_rebaterecord re on br.Id = re.BriefChapterId and re.DeleteFlag = 0
        left join hr_group grr on br.RecruitedCompanyId = grr.Id and grr.groupStatus = 0
        left join hr_group gr on br.userId = gr.CertifierId and gr.groupStatus = 0
        left join hr_signup_deliveryrecord sd on br.Id = sd.brief_chapter_id and delete_flag = 0
        left join hr_signup si on sd.signup_id = si.id and si.delete_flag = 0
        where br.briefChapterStatus = 0
        and grr.pid = gr.Id
        and gr.type = 0

        <if test="null != signUpStatus">
            and sd.status in
            <foreach collection="signUpStatus" item="item" separator="," open="(" close=")">
                #{item}
            </foreach>
        </if>
        <if test="null != id">
            and si.id = #{id}
        </if>
    </select>
    <select id="myRelease" resultMap="BaseResultMap">
        select (SELECT GROUP_CONCAT(d.name)
        FROM hr_dictionary_item d
        WHERE FIND_IN_SET(d.value, br.PostId)
        and d.pId = 1) as postName,
        br.id,
        grr.GroupName as certifier,
        gr.GroupName as recruitedCompany,
        br.RecruitingNo as recruitingNo,
        gr.GroupAddress as groupAddress,
        br.avgSalary as avgSalary,
        br.Rebate,
        br.detailSalary as detailSalary,
        (SELECT GROUP_CONCAT(d.name)
        FROM hr_dictionary_item d
        WHERE FIND_IN_SET(d.value, br.detailSalaryWay)
        and d.pId = 23) as detailSalaryWay,
        br.rebate_male_interview,
        br.rebate_male_report,
        br.rebate_male_entry,
        br.rebate_female_interview,
        br.rebate_female_report,
        br.rebate_female_entry,
        (SELECT GROUP_CONCAT(d.name)
        FROM hr_dictionary_item d
        WHERE FIND_IN_SET(d.value, br.welfareId)
        and d.pId = 10) as welfareId,
        br.Rebate as rebateStatus
        from hr_briefchapter br
        left join hr_user u on u.id = br.userId and u.status = 0
        left join hr_group grr on br.RecruitedCompanyId = grr.Id and grr.groupStatus = 0
        left join hr_group gr on br.userId = gr.CertifierId and gr.groupStatus = 0
        where br.briefChapterStatus = 0
        and grr.pid = gr.Id
        <if test="null != userId">
            and u.id = #{userId}
        </if>
        <if test="null != status">
            and br.Status = #{status}
        </if>
    </select>
    <select id="queryBriefcharpterByParams" resultMap="BaseResultMap"
            parameterType="com.nado.rlzy.bean.query.BriefcharpterQuery">
        select (SELECT GROUP_CONCAT(d.name)
        FROM hr_dictionary_item d
        WHERE FIND_IN_SET(d.value, br.PostId)
        and d.pId = 1) as postName,
        br.id,
        gr.GroupName as certifier,
        br.RecruitingNo as recruitingNo,
        gr.GroupAddress as groupAddress,
        br.avgSalary as avgSalary,
        br.Rebate,
        br.detailSalary as detailSalary,
        (SELECT GROUP_CONCAT(d.name)
        FROM hr_dictionary_item d
        WHERE FIND_IN_SET(d.value, br.detailSalaryWay)
        and d.pId = 23) as detailSalaryWay,
        br.rebate_male_interview,
        br.rebate_male_report,
        br.rebate_male_entry,
        br.rebate_female_interview,
        br.rebate_female_report,
        br.rebate_female_entry,
        (SELECT GROUP_CONCAT(d.name)
        FROM hr_dictionary_item d
        WHERE FIND_IN_SET(d.value, br.welfareId)
        and d.pId = 10) as welfareId,
        br.Rebate as rebateStatus
        from hr_briefchapter br
        left join hr_group gr on br.userId = gr.CertifierId and gr.groupStatus = 0
        where br.briefChapterStatus = 0
        and gr.type = 1
        <if test="null != certifier and '' != certifier">
            and gr.GroupName like concat('%', #{certifier}, '%')
        </if>
        <if test="null != postName">
            and br.PostId in
            <foreach collection="postName" item="item" separator="," open="(" close=")">
                #{item}
            </foreach>
        </if>
        <if test="null != sex">
            and si.sex = #{sex}
        </if>
        <if test="null != manAgeId">
            and br.man_age_id = #{manAgeId}
        </if>
        <if test="null != age">
            and br.man_age_id = #{age}
        </if>
        <if test="null != womenAgeId">
            and br.women_age_id = #{womenAgeId}
        </if>
        <if test="null != contractWayDetailId">
            and br.contract_way_detail_id = #{contractWayDetailId}
        </if>
        <if test="null != professionId">
            and br.profession_id = #{professionId}
        </if>
        <if test="null != educationId and '' != educationId">
            and br.educationId like concat('%', #{educationId}, '%')
        </if>

        <if test="null != experienceId">
            and br.experienceId = #{experienceId}
        </if>
        <if test="null != workWayId">
            and br.work_way_id = #{workWayId}
        </if>
        <if test="null != workTimeArrangeId">
            and br.work_time_arrange_id = #{workTimeArrangeId}
        </if>
        <if test="null != clothingRequirementId">
            and br.clothing_requirement_id = #{clothingRequirementId}
        </if>
        <if test="null != workAddress and '' != workAddress ">
            and br.work_address like concat('%', #{workAddress}, '%')
        </if>
        <if test="null != hobbyId and '' != hobbyId">
            and br.hobby_id like concat ('%', #{hobbyId}, '%')
        </if>
        <if test="null != overtimeTimeId ">
            and br.overtime_times_id = #{overtimeTimeId}
        </if>
        <if test="null != welfareId and '' != welfareId">
            and br.welfareId like concat('%', #{welfareId}, '%')
        </if>
        <if test="null != interviewStartTime and null != interviewEndTime">
            and br.interviewTime between #{interviewStartTime} and #{interviewEndTime}
        </if>
        <if test="null != registerStartTime and null != registerEndTime">
            and br.registerTime between #{registerStartTime} and #{registerEndTime}
        </if>
        <if test="null != contractWay">
            and br.contractWay = #{contractWay}
        </if>
        <if test="null != expectedSalaryLower">
            and si.expected_salary_lower = #{expectedSalaryLower}
        </if>
        <if test="null != expectedSalaryUpper">
            and si.expected_salary_upper = #{expectedSalaryUpper}
        </if>
        <if test="null != educationId">
            and si.education = #{educationId}
        </if>
        order by br.CreateTime desc
    </select>
    <select id="queryBriefcharpterDetileRecruitment" resultMap="BaseResultMap"
            parameterType="com.nado.rlzy.bean.query.BriefcharpterQuery">
        select (SELECT GROUP_CONCAT(d.name)
        FROM hr_dictionary_item d
        WHERE FIND_IN_SET(d.value, br.PostId)
        and d.pId = 1) as postName,
        br.PostId,
        br.Id,
        gr.GroupName as certifier,
        br.RecruitingNo as recruitingNo,
        gr.GroupAddress as groupAddress,
        br.avgSalary as avgSalary,
        br.detailSalary as detailSalary,
        (SELECT GROUP_CONCAT(d.name)
        FROM hr_dictionary_item d
        WHERE FIND_IN_SET(d.value, br.detailSalaryWay)
        and d.pId = 23) as detailSalaryWay,
        br.hireWay as hireWay,
        (SELECT GROUP_CONCAT(d.name)
        FROM hr_dictionary_item d
        WHERE FIND_IN_SET(d.value, br.man_age_id)
        and d.pId = 5) as manAge,
        br.Rebate,
        gr.Id as groupId,
        (SELECT GROUP_CONCAT(d.name)
        FROM hr_dictionary_item d
        WHERE FIND_IN_SET(d.value, br.women_age_id)
        and d.pId = 9) as womenAge,
        (SELECT GROUP_CONCAT(d.name)
        FROM hr_dictionary_item d
        WHERE FIND_IN_SET(d.value, br.educationId)
        and d.pId = 2) as education,
        (SELECT GROUP_CONCAT(d.name)
        FROM hr_dictionary_item d
        WHERE FIND_IN_SET(d.value, br.experienceId)
        and d.pId = 12) as experience,
        (SELECT GROUP_CONCAT(d.name)
        FROM hr_dictionary_item d
        WHERE FIND_IN_SET(d.value, br.profession_id)
        and d.pId = 3) as profession,
        (SELECT GROUP_CONCAT(d.name)
        FROM hr_dictionary_item d
        WHERE FIND_IN_SET(d.value, br.work_way_id)
        and d.pId = 16) as workWay,
        (SELECT GROUP_CONCAT(d.name)
        FROM hr_dictionary_item d
        WHERE FIND_IN_SET(d.value, br.work_time_arrange_id)
        and d.pId = 17) as workTimeArrange,
        br.overtime_times_id as overtimeTime,
        (SELECT GROUP_CONCAT(d.name)
        FROM hr_dictionary_item d
        WHERE FIND_IN_SET(d.value, br.clothing_requirement_id)
        and d.pId = 14) as clothingReguiement,
        (SELECT GROUP_CONCAT(d.name)
        FROM hr_dictionary_item d
        WHERE FIND_IN_SET(d.value, br.hobby_id)
        and d.pId = 15) as hobby,
        br.no_employer_address as noEmployerAddress,
        br.PostDetail as postDetail,
        br.work_address,
        br.registerTime as registerTime,
        br.interview_address as interviewAddress,
        br.interviewTime,
        br.no_employer_address as noEmployerAddress,
        br.registerTime as registerTime,
        br.contractWay as contractWay,
        br.rebate_male_interview,
        br.rebate_male_report,
        br.rebate_female_interview,
        br.rebate_female_report,
        br.rebate_male_entry,
        br.rebate_female_entry,
        er.rebate_male_entry as rebateMaleEntry,
        er.rebate_female_entry as rebateFemaleEntry,
        er.rebate_time,
        er.id,
        (SELECT GROUP_CONCAT(d.name)
        FROM hr_dictionary_item d
        WHERE FIND_IN_SET(d.value, br.contract_way_detail_id)
        and d.pId = 13) as contractWayDetail,
        br.contract_start_time as contractStartTime,
        br.contractTime,
        br.readNum as readNum,
        (SELECT GROUP_CONCAT(d.name)
        FROM hr_dictionary_item d
        WHERE FIND_IN_SET(d.value, br.welfareId)
        and d.pId = 10) as welfareId,
        br.man_num,
        br.women_num,
        er.brief_chapter_id,
        er.rebate_time,
        er.type
        from hr_briefchapter br
        left join entry_resignation er on br.id = er.brief_chapter_id and er.delete_flag = 0 and er.type = 2
        left join hr_group gr on br.userId = gr.CertifierId and gr.groupStatus = 0
        where br.briefChapterStatus = 0
        and gr.type = 1
        <if test="null != briefcharpterId ">
            and br.Id = #{briefcharpterId}
        </if>

    </select>
    <select id="recommendedFeeTop10Recruitment" resultMap="BaseResultMap"
            parameterType="com.nado.rlzy.bean.query.BriefcharpterQuery">
        select (SELECT GROUP_CONCAT(d.name)
        FROM hr_dictionary_item d
        WHERE FIND_IN_SET(d.value, br.PostId)
        and d.pId = 1) as postName,
        br.id,
        gr.GroupName as certifier,
        br.RecruitingNo as recruitingNo,
        gr.GroupAddress as groupAddress,
        br.avgSalary as avgSalary,
        br.Rebate,
        br.detailSalary as detailSalary,
        (SELECT GROUP_CONCAT(d.name)
        FROM hr_dictionary_item d
        WHERE FIND_IN_SET(d.value, br.detailSalaryWay)
        and d.pId = 23) as detailSalaryWay,
        br.rebate_male_interview,
        br.rebate_male_report,
        br.rebate_male_entry,
        br.rebate_female_interview,
        br.rebate_female_report,
        br.rebate_female_entry,
        (SELECT GROUP_CONCAT(d.name)
        FROM hr_dictionary_item d
        WHERE FIND_IN_SET(d.value, br.welfareId)
        and d.pId = 10) as welfareId,
        br.Rebate as rebateStatus
        from hr_briefchapter br
        left join hr_group gr on br.userId = gr.CertifierId and gr.groupStatus = 0
        where br.briefChapterStatus = 0
        and gr.type = 1
        order by  br.CreateTime asc
        limit 0,10


    </select>
    <select id="studentDivisionRecruitment" resultMap="BaseResultMap"
            parameterType="com.nado.rlzy.bean.query.BriefcharpterQuery">
        select (SELECT GROUP_CONCAT(d.name)
        FROM hr_dictionary_item d
        WHERE FIND_IN_SET(d.value, br.PostId)
        and d.pId = 1) as postName,
        br.id,
        gr.GroupName as certifier,
        br.RecruitingNo as recruitingNo,
        gr.GroupAddress as groupAddress,
        br.avgSalary as avgSalary,
        br.Rebate,
        br.detailSalary as detailSalary,
        (SELECT GROUP_CONCAT(d.name)
        FROM hr_dictionary_item d
        WHERE FIND_IN_SET(d.value, br.detailSalaryWay)
        and d.pId = 23) as detailSalaryWay,
        br.rebate_male_interview,
        br.rebate_male_report,
        br.rebate_male_entry,
        br.rebate_female_interview,
        br.rebate_female_report,
        br.rebate_female_entry,
        (SELECT GROUP_CONCAT(d.name)
        FROM hr_dictionary_item d
        WHERE FIND_IN_SET(d.value, br.welfareId)
        and d.pId = 10) as welfareId,
        br.Rebate as rebateStatus
        from hr_briefchapter br
        left join hr_group gr on br.userId = gr.CertifierId and gr.groupStatus = 0
        where br.briefChapterStatus = 0
        and gr.type = 1
        <if test="null != contractWayDetailId1">
            and br.contract_way_detail_id in
            <foreach collection="contractWayDetailId1" item="item" separator="," open="(" close=")">
                #{item}
            </foreach>
        </if>
    </select>

    <select id="salaryLeaderboardRecruitment" resultMap="BaseResultMap"
            parameterType="com.nado.rlzy.bean.query.BriefcharpterQuery">
        select (SELECT GROUP_CONCAT(d.name)
        FROM hr_dictionary_item d
        WHERE FIND_IN_SET(d.value, br.PostId)
        and d.pId = 1) as postName,
        br.id,
        gr.GroupName as certifier,
        br.RecruitingNo as recruitingNo,
        gr.GroupAddress as groupAddress,
        br.avgSalary as avgSalary,
        br.Rebate,
        br.detailSalary as detailSalary,
        (SELECT GROUP_CONCAT(d.name)
        FROM hr_dictionary_item d
        WHERE FIND_IN_SET(d.value, br.detailSalaryWay)
        and d.pId = 23) as detailSalaryWay,
        br.rebate_male_interview,
        br.rebate_male_report,
        br.rebate_male_entry,
        br.rebate_female_interview,
        br.rebate_female_report,
        br.rebate_female_entry,
        (SELECT GROUP_CONCAT(d.name)
        FROM hr_dictionary_item d
        WHERE FIND_IN_SET(d.value, br.welfareId)
        and d.pId = 10) as welfareId,
        br.Rebate as rebateStatus
        from hr_briefchapter br
        left join hr_group gr on br.userId = gr.CertifierId and gr.groupStatus = 0
        where br.briefChapterStatus = 0
        and gr.type = 1
        order by br.avgSalary desc
    </select>
    <select id="directBusinessRecruitment" resultMap="BaseResultMap"
            parameterType="com.nado.rlzy.bean.query.BriefcharpterQuery">
         select (SELECT GROUP_CONCAT(d.name)
        FROM hr_dictionary_item d
        WHERE FIND_IN_SET(d.value, br.PostId)
        and d.pId = 1) as postName,
        br.id,
        gr.GroupName as certifier,
        br.RecruitingNo as recruitingNo,
        gr.GroupAddress as groupAddress,
        br.avgSalary as avgSalary,
        br.Rebate,
        br.detailSalary as detailSalary,
        (SELECT GROUP_CONCAT(d.name)
        FROM hr_dictionary_item d
        WHERE FIND_IN_SET(d.value, br.detailSalaryWay)
        and d.pId = 23) as detailSalaryWay,
        br.rebate_male_interview,
        br.rebate_male_report,
        br.rebate_male_entry,
        br.rebate_female_interview,
        br.rebate_female_report,
        br.rebate_female_entry,
        (SELECT GROUP_CONCAT(d.name)
        FROM hr_dictionary_item d
        WHERE FIND_IN_SET(d.value, br.welfareId)
        and d.pId = 10) as welfareId,
        br.Rebate as rebateStatus
        from hr_briefchapter br
        left join hr_group gr on br.userId = gr.CertifierId and gr.groupStatus = 0
        where br.briefChapterStatus = 0
        and gr.type = 1
        and br.contractWay = 1


    </select>
    <select id="directAdmissionRecruitment" resultMap="BaseResultMap"
            parameterType="com.nado.rlzy.bean.query.BriefcharpterQuery">
        select (SELECT GROUP_CONCAT(d.name)
        FROM hr_dictionary_item d
        WHERE FIND_IN_SET(d.value, br.PostId)
        and d.pId = 1) as postName,
        br.id,
        gr.GroupName as certifier,
        br.RecruitingNo as recruitingNo,
        gr.GroupAddress as groupAddress,
        br.avgSalary as avgSalary,
        br.Rebate,
        br.detailSalary as detailSalary,
        (SELECT GROUP_CONCAT(d.name)
        FROM hr_dictionary_item d
        WHERE FIND_IN_SET(d.value, br.detailSalaryWay)
        and d.pId = 23) as detailSalaryWay,
        br.rebate_male_interview,
        br.rebate_male_report,
        br.rebate_male_entry,
        br.rebate_female_interview,
        br.rebate_female_report,
        br.rebate_female_entry,
        (SELECT GROUP_CONCAT(d.name)
        FROM hr_dictionary_item d
        WHERE FIND_IN_SET(d.value, br.welfareId)
        and d.pId = 10) as welfareId,
        br.Rebate as rebateStatus
        from hr_briefchapter br
        left join hr_group gr on br.userId = gr.CertifierId and gr.groupStatus = 0
        where br.briefChapterStatus = 0
        and gr.type = 1
        and (br.hireWay = 1
        or br.hireWay = 0)
    </select>
    <select id="recruitmentBrochureCollectionRecruitment" resultMap="BaseResultMap">
        select (SELECT GROUP_CONCAT(d.name)
        FROM hr_dictionary_item d
        WHERE FIND_IN_SET(d.value, br.PostId)
        and d.pId = 1) as postName,
        br.id,
        gr.GroupName as certifier,
        br.RecruitingNo as recruitingNo,
        gr.GroupAddress as groupAddress,
        br.avgSalary as avgSalary,
        br.Rebate,
        br.detailSalary as detailSalary,
        (SELECT GROUP_CONCAT(d.name)
        FROM hr_dictionary_item d
        WHERE FIND_IN_SET(d.value, br.detailSalaryWay)
        and d.pId = 23) as detailSalaryWay,
        br.rebate_male_interview,
        br.rebate_male_report,
        br.rebate_male_entry,
        br.rebate_female_interview,
        br.rebate_female_report,
        br.rebate_female_entry,
        (SELECT GROUP_CONCAT(d.name)
        FROM hr_dictionary_item d
        WHERE FIND_IN_SET(d.value, br.welfareId)
        and d.pId = 10) as welfareId,
        br.Rebate as rebateStatus,
        u.Id
        from collect c
        left join hr_briefchapter br on br.id = c.briefchapter_id and br.briefChapterStatus = 0
        left join hr_user u on c.user_id = u.id and u.status = 0
        left join hr_group gr on br.userId = gr.CertifierId and gr.groupStatus = 0
        where br.briefChapterStatus = 0
        <if test="null != type">
            and u.type = #{type}
        </if>
        and gr.type = 1
        <if test="null != userId">
            and u.id = #{userId}
        </if>


    </select>
    <select id="queryBriefcharpterByLongLiveRecruitment" resultMap="BaseResultMap"
            parameterType="com.nado.rlzy.bean.query.BriefcharpterQuery">
       select (SELECT GROUP_CONCAT(d.name)
        FROM hr_dictionary_item d
        WHERE FIND_IN_SET(d.value, br.PostId)
          and d.pId = 1)  as postName,
       br.id,
       gr.GroupName       as certifier,
       br.RecruitingNo    as recruitingNo,
       gr.GroupAddress    as groupAddress,
       br.avgSalary       as avgSalary,
       br.Rebate,
       br.detailSalary    as detailSalary,
       (SELECT GROUP_CONCAT(d.name)
        FROM hr_dictionary_item d
        WHERE FIND_IN_SET(d.value, br.detailSalaryWay)
          and d.pId = 23) as detailSalaryWay,
       br.rebate_male_interview,
       br.rebate_male_report,
       br.rebate_male_entry,
       br.rebate_female_interview,
       br.rebate_female_report,
       br.rebate_female_entry,
       (SELECT GROUP_CONCAT(d.name)
        FROM hr_dictionary_item d
        WHERE FIND_IN_SET(d.value, br.welfareId)
          and d.pId = 10) as welfareId,
       br.Rebate          as rebateStatus
        from hr_briefchapter br
         left join hr_group gr on br.userId = gr.CertifierId and gr.groupStatus = 0
        where br.briefChapterStatus = 0
        and gr.type = 1 and br.work_time_arrange_id = 1

    </select>
    <select id="queryBriefcharpterByLongEatRecruitment" resultMap="BaseResultMap"
            parameterType="com.nado.rlzy.bean.query.BriefcharpterQuery">
        select (SELECT GROUP_CONCAT(d.name)
        FROM hr_dictionary_item d
        WHERE FIND_IN_SET(d.value, br.PostId)
          and d.pId = 1)  as postName,
       br.id,
       gr.GroupName       as certifier,
       br.RecruitingNo    as recruitingNo,
       gr.GroupAddress    as groupAddress,
       br.avgSalary       as avgSalary,
       br.Rebate,
       br.detailSalary    as detailSalary,
       (SELECT GROUP_CONCAT(d.name)
        FROM hr_dictionary_item d
        WHERE FIND_IN_SET(d.value, br.detailSalaryWay)
          and d.pId = 23) as detailSalaryWay,
       br.rebate_male_interview,
       br.rebate_male_report,
       br.rebate_male_entry,
       br.rebate_female_interview,
       br.rebate_female_report,
       br.rebate_female_entry,
       (SELECT GROUP_CONCAT(d.name)
        FROM hr_dictionary_item d
        WHERE FIND_IN_SET(d.value, br.welfareId)
          and d.pId = 10) as welfareId,
       br.Rebate          as rebateStatus
        from hr_briefchapter br
         left join hr_group gr on br.userId = gr.CertifierId and gr.groupStatus = 0
        where br.briefChapterStatus = 0
        and gr.type = 1 and br.welfareId like concat('%', 1, '%')

    </select>
    <select id="queryBriefchapterBySignUpstatusRecruitment" resultMap="BaseResultMap">
        select (SELECT GROUP_CONCAT(d.name)
        FROM hr_dictionary_item d
        WHERE FIND_IN_SET(d.value, br.PostId)
        and d.pId = 1) as postName,
        br.id,
        gr.GroupName as certifier,
        br.RecruitingNo as recruitingNo,
        gr.GroupAddress as groupAddress,
        br.avgSalary as avgSalary,
        br.Rebate,
        br.detailSalary as detailSalary,
        (SELECT GROUP_CONCAT(d.name)
        FROM hr_dictionary_item d
        WHERE FIND_IN_SET(d.value, br.detailSalaryWay)
        and d.pId = 23) as detailSalaryWay,
        br.rebate_male_interview,
        br.rebate_male_report,
        br.rebate_male_entry,
        br.rebate_female_interview,
        br.rebate_female_report,
        br.rebate_female_entry,
        (SELECT GROUP_CONCAT(d.name)
        FROM hr_dictionary_item d
        WHERE FIND_IN_SET(d.value, br.welfareId)
        and d.pId = 10) as welfareId,
        br.Rebate as rebateStatus,
        sd.status,
        br.interviewTime,
        br.registerTime,
        sd.no_pass_reason,
        re.RebateFemale,
        re.RebateMale,
        re.RebateTime,
        re.status as rebStatus,
        re.sign_up_id
        from hr_briefchapter br
        left join hr_rebaterecord re on br.Id = re.BriefChapterId and re.DeleteFlag = 0
        left join hr_group gr on br.userId = gr.CertifierId and gr.groupStatus = 0
        left join hr_signup_deliveryrecord sd on br.Id = sd.brief_chapter_id and delete_flag = 0
        left join hr_signup si on sd.signup_id = si.id and si.delete_flag = 0
        where br.briefChapterStatus = 0
        and gr.type = 1
        <if test="null != signUpStatus">
            and sd.status in
            <foreach collection="signUpStatus" item="item" separator="," open="(" close=")">
                #{item}
            </foreach>
        </if>
        <if test="null != id">
            and si.id = #{id}
        </if>


    </select>

    <select id="myReleaseRecruitment" resultMap="BaseResultMap">
        select (SELECT GROUP_CONCAT(d.name)
        FROM hr_dictionary_item d
        WHERE FIND_IN_SET(d.value, br.PostId)
        and d.pId = 1) as postName,
        br.id,
        gr.GroupName as certifier,
        br.RecruitingNo as recruitingNo,
        gr.GroupAddress as groupAddress,
        br.avgSalary as avgSalary,
        br.Rebate,
        br.detailSalary as detailSalary,
        (SELECT GROUP_CONCAT(d.name)
        FROM hr_dictionary_item d
        WHERE FIND_IN_SET(d.value, br.detailSalaryWay)
        and d.pId = 23) as detailSalaryWay,
        br.rebate_male_interview,
        br.rebate_male_report,
        br.rebate_male_entry,
        br.rebate_female_interview,
        br.rebate_female_report,
        br.rebate_female_entry,
        (SELECT GROUP_CONCAT(d.name)
        FROM hr_dictionary_item d
        WHERE FIND_IN_SET(d.value, br.welfareId)
        and d.pId = 10) as welfareId,
        br.Rebate as rebateStatus
        from hr_briefchapter br
        left join hr_user u on u.id = br.userId and u.status = 0
        left join hr_group gr on br.userId = gr.CertifierId and gr.groupStatus = 0
        left join hr_signup_deliveryrecord sd on br.Id = sd.brief_chapter_id and sd.delete_flag = 0
        left join hr_signup si on sd.signup_id = si.id and si.delete_flag = 0
        where br.briefChapterStatus = 0
        and gr.type = 1
        <if test="null != userId">
            and u.id = #{userId}
        </if>
        <if test="null != status">
            and br.Status = #{status}
        </if>


    </select>
    <select id="recommendAPosition" resultMap="BaseResultMap">
        select (SELECT GROUP_CONCAT(d.name)
        FROM hr_dictionary_item d
        WHERE FIND_IN_SET(d.value, br.PostId)
        and d.pId = 1) as postName,
        br.id,
        grr.GroupName as certifier,
        gr.GroupName as recruitedCompany,
        br.RecruitingNo as recruitingNo,
        gr.GroupAddress as groupAddress,
        br.avgSalary as avgSalary,
        br.Rebate,
        br.detailSalary as detailSalary,
        (SELECT GROUP_CONCAT(d.name)
        FROM hr_dictionary_item d
        WHERE FIND_IN_SET(d.value, br.detailSalaryWay)
        and d.pId = 23) as detailSalaryWay,

        br.rebate_male_interview,
        br.rebate_male_report,
        br.rebate_male_entry,
        br.rebate_female_interview,
        br.rebate_female_report,
        br.rebate_female_entry,
        (SELECT GROUP_CONCAT(d.name)
        FROM hr_dictionary_item d
        WHERE FIND_IN_SET(d.value, br.welfareId)
        and d.pId = 10) as welfareId,
        br.Rebate as rebateStatus
        from hr_briefchapter br
        left join hr_group grr on br.RecruitedCompanyId = grr.Id and grr.groupStatus = 0
        left join hr_group gr on br.userId = gr.CertifierId and gr.groupStatus = 0
        where br.briefChapterStatus = 0
        and grr.pid = gr.Id
        <if test="null != recruitedCompany">
            and grr.GroupName like concat('%', #{recruitedCompany}, '%');
        </if>
    </select>
    <select id="recommendAPositionRecruitment" resultMap="BaseResultMap">
        select (SELECT GROUP_CONCAT(d.name)
        FROM hr_dictionary_item d
        WHERE FIND_IN_SET(d.value, br.PostId)
        and d.pId = 1) as postName,
        br.id,
        gr.GroupName as certifier,
        br.RecruitingNo as recruitingNo,
        gr.GroupAddress as groupAddress,
        br.avgSalary as avgSalary,
        br.Rebate,
        br.detailSalary as detailSalary,
        (SELECT GROUP_CONCAT(d.name)
        FROM hr_dictionary_item d
        WHERE FIND_IN_SET(d.value, br.detailSalaryWay)
        and d.pId = 23) as detailSalaryWay,
        br.rebate_male_interview,
        br.rebate_male_report,
        br.rebate_male_entry,
        br.rebate_female_interview,
        br.rebate_female_report,
        br.rebate_female_entry,
        (SELECT GROUP_CONCAT(d.name)
        FROM hr_dictionary_item d
        WHERE FIND_IN_SET(d.value, br.welfareId)
        and d.pId = 10) as welfareId,
        br.Rebate as rebateStatus
        from hr_briefchapter br
        left join hr_group gr on br.userId = gr.CertifierId and gr.groupStatus = 0
        where br.briefChapterStatus = 0
        and gr.type = 1
        <if test="null != recruitedCompany">
            and gr.GroupName like concat('%', #{recruitedCompany}, '%')
        </if>

    </select>
    <select id="queryRecruitingNo" resultMap="BaseResultMap">
        select RecruitingNo from hr_briefchapter where briefChapterStatus = 0
        <if test="null != briefchapter">
            and Id = #{briefchapter}
        </if>
    </select>
    <select id="representativeUnit" resultMap="BaseResultMap">
        select (SELECT GROUP_CONCAT(d.name)
        FROM hr_dictionary_item d
        WHERE FIND_IN_SET(d.value, br.PostId)
        and d.pId = 1) as postName,
        br.id,
        grr.GroupName as certifier,
        gr.GroupName as recruitedCompany,
        br.RecruitingNo as recruitingNo,
        gr.GroupAddress as groupAddress,
        br.avgSalary as avgSalary,
        br.Rebate,
        br.detailSalary as detailSalary,
        (SELECT GROUP_CONCAT(d.name)
        FROM hr_dictionary_item d
        WHERE FIND_IN_SET(d.value, br.detailSalaryWay)
        and d.pId = 23) as detailSalaryWay,

        br.rebate_male_interview,
        br.rebate_male_report,
        br.rebate_male_entry,
        br.rebate_female_interview,
        br.rebate_female_report,
        br.rebate_female_entry,
        (SELECT GROUP_CONCAT(d.name)
        FROM hr_dictionary_item d
        WHERE FIND_IN_SET(d.value, br.welfareId)
        and d.pId = 10) as welfareId,
        br.Rebate as rebateStatus
        from hr_briefchapter br
        left join hr_group grr on br.RecruitedCompanyId = grr.Id and grr.groupStatus = 0
        left join hr_group gr on br.userId = gr.CertifierId and gr.groupStatus = 0
        where br.briefChapterStatus = 0
        and grr.pid = gr.Id
        <if test="null != userId">
            and u.Id = #{userId}
        </if>
    </select>
    <select id="recruitmentUnit" resultMap="BaseResultMap">
        select (SELECT GROUP_CONCAT(d.name)
        FROM hr_dictionary_item d
        WHERE FIND_IN_SET(d.value, br.PostId)
        and d.pId = 1) as postName,
        br.id,
        gr.GroupName as certifier,
        br.RecruitingNo as recruitingNo,
        gr.GroupAddress as groupAddress,
        br.avgSalary as avgSalary,
        br.Rebate,
        br.detailSalary as detailSalary,
        (SELECT GROUP_CONCAT(d.name)
        FROM hr_dictionary_item d
        WHERE FIND_IN_SET(d.value, br.detailSalaryWay)
        and d.pId = 23) as detailSalaryWay,
        br.rebate_male_interview,
        br.rebate_male_report,
        br.rebate_male_entry,
        br.rebate_female_interview,
        br.rebate_female_report,
        br.rebate_female_entry,
        (SELECT GROUP_CONCAT(d.name)
        FROM hr_dictionary_item d
        WHERE FIND_IN_SET(d.value, br.welfareId)
        and d.pId = 10) as welfareId,
        br.Rebate as rebateStatus
        from hr_briefchapter br
        left join hr_user u on u.id = br.userId and u.status = 0
        left join hr_group gr on br.userId = gr.CertifierId and gr.groupStatus = 0
        where br.briefChapterStatus = 0
        and gr.type = 1
        <if test="null != userId">
            and u.id = #{userId}
        </if>
    </select>
    <select id="companyHomeHistory" resultType="hrBriefchapter" resultMap="BaseResultMap">
        select (SELECT GROUP_CONCAT(d.name)
        FROM hr_dictionary_item d
        WHERE FIND_IN_SET(d.value, br.PostId)
        and d.pId = 1) as postName,
        br.id,
        grr.GroupName as certifier,
        gr.GroupName as recruitedCompany,
        br.RecruitingNo as recruitingNo,
        gr.GroupAddress as groupAddress,
        br.avgSalary as avgSalary,
        br.Rebate,
        br.detailSalary as detailSalary,
        (SELECT GROUP_CONCAT(d.name)
        FROM hr_dictionary_item d
        WHERE FIND_IN_SET(d.value, br.detailSalaryWay)
        and d.pId = 23) as detailSalaryWay,
        br.rebate_male_interview,
        br.rebate_male_report,
        br.rebate_male_entry,
        br.rebate_female_interview,
        br.rebate_female_report,
        br.rebate_female_entry,
        (SELECT GROUP_CONCAT(d.name)
        FROM hr_dictionary_item d
        WHERE FIND_IN_SET(d.value, br.welfareId)
        and d.pId = 10) as welfareId,
        br.Rebate as rebateStatus
        from hr_briefchapter br
        left join hr_group grr on br.RecruitedCompanyId = grr.Id and grr.groupStatus = 0
        left join hr_group gr on br.userId = gr.CertifierId and gr.groupStatus = 0
        where br.briefChapterStatus = 0
        and grr.pid = gr.Id
        <if test="null != groupId">
            and gr.Id = #{groupId}
        </if>
    </select>
    <select id="companyHomeHistoryRecruitment" resultMap="BaseResultMap">
        select (SELECT GROUP_CONCAT(d.name)
        FROM hr_dictionary_item d
        WHERE FIND_IN_SET(d.value, br.PostId)
        and d.pId = 1) as postName,
        br.id,
        gr.GroupName as certifier,
        br.RecruitingNo as recruitingNo,
        gr.GroupAddress as groupAddress,
        br.avgSalary as avgSalary,
        br.Rebate,
        br.detailSalary as detailSalary,
        (SELECT GROUP_CONCAT(d.name)
        FROM hr_dictionary_item d
        WHERE FIND_IN_SET(d.value, br.detailSalaryWay)
        and d.pId = 23) as detailSalaryWay,
        br.rebate_male_interview,
        br.rebate_male_report,
        br.rebate_male_entry,
        br.rebate_female_interview,
        br.rebate_female_report,
        br.rebate_female_entry,
        (SELECT GROUP_CONCAT(d.name)
        FROM hr_dictionary_item d
        WHERE FIND_IN_SET(d.value, br.welfareId)
        and d.pId = 10) as welfareId,
        br.Rebate as rebateStatus
        from hr_briefchapter br
        left join hr_group gr on br.userId = gr.CertifierId and gr.groupStatus = 0
        where br.briefChapterStatus = 0
        and gr.type = 1
        <if test="null != groupId">
            and gr.Id = #{groupId}
        </if>
    </select>

    <select id="interviewRebateOrReportRebate" resultMap="BaseResultMap">
        select rebate_female_interview, rebate_male_interview, rebate_male_report, rebate_female_report from
        hr_briefchapter
        <where>
            briefChapterStatus = 0
            <if test="null != briechapterId">
                and Id = #{briechapterId}
            </if>
        </where>
    </select>

</mapper>