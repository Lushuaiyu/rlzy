<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.nado.rlzy.db.mapper.HrSignupDeliveryrecordMapper">
    <resultMap id="BaseResultMap" type="com.nado.rlzy.db.pojo.HrSignupDeliveryrecord">
        <id column="id" jdbcType="INTEGER" property="id"/>
        <result column="signup_id" jdbcType="INTEGER" property="signupId"/>
        <result column="brief_chapter_id" jdbcType="INTEGER" property="briefChapterId"/>
        <result column="job_status" jdbcType="INTEGER" property="jobStatus"/>
        <result column="status" jdbcType="INTEGER" property="status"/>
        <result column="no_pass_reason" jdbcType="INTEGER" property="noPassReason"/>
        <result column="no_report_reason" jdbcType="INTEGER" property="noReportReason"/>
        <result column="create_time" jdbcType="TIMESTAMP" property="createTime"/>
        <result column="delete_flag" jdbcType="INTEGER" property="deleteFlag"/>
        <result column="rebate_interview_time" jdbcType="DATE" property="rebateInterviewTime"/>
        <result column="rebate_report_time" jdbcType="DATE" property="rebateReportTime"/>
        <result column="rebate_entry_time" jdbcType="DATE" property="rebateEntryTime"/>
        <result column="rebate_type" jdbcType="INTEGER" property="rebateType"/>
        <result column="accept_rebate_amount" jdbcType="DECIMAL" property="acceptRebateAmount"/>
        <result column="rebate_interview_status" jdbcType="INTEGER" property="rebateInterviewStatus"/>
        <result column="rebate_report_status" jdbcType="INTEGER" property="rebateReportStatus"/>
        <result column="rebate_entry_status" jdbcType="INTEGER" property="rebateEntryStatus"/>
    </resultMap>
    <insert id="referrerToSIgnUp">
        insert into hr_signup_deliveryrecord (signup_id, brief_chapter_id, job_status, status, create_time,
        accept_rebate_amount) values
        <foreach collection="entites" item="item" separator=",">
            (#{item.signupId}, #{item.briefChapterId}, #{item.jobStatus}, #{item.status}, #{item.createTime},
            #{item.acceptRebateAmount})
        </foreach>
    </insert>
    <insert id="inserttListt">
        insert into hr_signup_deliveryrecord (signup_id, brief_chapter_id, create_time, accept_rebate_amount)
        values
        <foreach collection="list" item="item" separator=",">
           (#{item.signupId}, #{item.briefChapterId}, #{item.createTime}, #{item.acceptRebateAmount})
        </foreach>
    </insert>

    <update id="reducedRebateAmount" parameterType="hrSignupDeliveryrecord">
        update hr_signup_deliveryrecord set accept_rebate_amount = accept_rebate_amount - #{acceptRebateAmount},
        rebate_interview_status = 1
        where delete_flag = 0
        <if test="null != signupId">
            and signup_id = #{signupId}
        </if>
        <if test="null != briefChapterId">
            and brief_chapter_id = #{briefChapterId}
        </if>
    </update>
    <update id="updateReba">
        update hr_signup_deliveryrecord
        <set>
            <if test="null != signUpId">
                status = 12,
            </if>
            <if test="null != briefChapterId">
                job_status = 8
            </if>
        </set>
        <where>
            delete_flag = 0
            <if test="null != signupDeliveryrecordId">
                and id = #{signupDeliveryrecordId}
            </if>
        </where>
    </update>
    <update id="updateWaitingForCommission">
        update hr_signup_deliveryrecord

        accept_rebate_amount = accept_rebate_amount - #{acceptRebateAmount} where delete_flag = 0
        <if test="null != briefchpterId">
            and brief_chapter_id = #{briefchpterId}
        </if>
        <if test="null != signUpId">
            and signup_id = #{signUpId}
        </if>

    </update>
    <select id="selectNumberViolations" resultType="_int">
        select count(si.id)
        from hr_signup_deliveryrecord hsd
        left join hr_signup si on hsd.signup_id = si.id and si.delete_flag = 0
        left join hr_user u on si.user_id = u.Id and u.type = 2 and u.status = 0
        where hsd.delete_flag = 0
        and hsd.no_report_reason = 2
        and u.type = 2
        <if test="null != userId">
            and u.Id = #{userId}
        </if>
    </select>
    <update id="cancelRegistration">
    update hr_signup_deliveryrecord set delete_flag = 1 where id = #{id}
    </update>
</mapper>