<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.nado.rlzy.db.mapper.HrSignUpMapper">
    <resultMap id="BaseResultMap" type="com.nado.rlzy.db.pojo.HrSignUp">
        <id column="id" property="id" jdbcType="INTEGER"/>
        <result column="user_id" property="userId" jdbcType="INTEGER"/>
        <result column="group_id" property="groupId" jdbcType="INTEGER"/>
        <result column="brief_chapter_id" property="briefChapterId" jdbcType="INTEGER"/>
        <result column="type" property="type" jdbcType="INTEGER"/>
        <result column="user_name" property="signUpName" jdbcType="VARCHAR"/>
        <result column="userName" property="userName" jdbcType="VARCHAR"/>
        <result column="sex" property="sex" jdbcType="INTEGER"/>
        <result column="id_card" property="idCard" jdbcType="VARCHAR"/>
        <result column="education" property="education" jdbcType="VARCHAR"/>
        <result column="graduation_time" property="graduationTime" jdbcType="DATE"/>
        <result column="profession" property="profession" jdbcType="VARCHAR"/>
        <result column="arrival_time" property="arrivalTime" jdbcType="DATE"/>
        <result column="expected_salary_upper" property="expectedSalaryUpper" jdbcType="DECIMAL"/>
        <result column="recommendName" property="recommendName" jdbcType="VARCHAR"/>
        <result column="commendName" property="commendName" jdbcType="VARCHAR"/>
        <result column="expected_salary_lower" property="expectedSalaryLower" jdbcType="DECIMAL"/>
        <result column="enter_time" property="enterTime" jdbcType="TIMESTAMP"/>
        <result column="job_status" property="jobStatus" jdbcType="INTEGER"/>
        <result column="no_pass_reason" property="noPassReason" jdbcType="INTEGER"/>
        <result column="delete_flag" property="deleteFlag" jdbcType="TINYINT"/>
        <result column="registration_position_id" property="registrationPositionId" jdbcType="VARCHAR"/>
        <result column="age" property="age" jdbcType="INTEGER"/>
        <result column="relation" property="relation" jdbcType="INTEGER"/>
        <result column="group_name" property="groupName" jdbcType="VARCHAR"/>
        <result column="Name" property="postName" jdbcType="VARCHAR"/>
        <result column="signId" property="signId" jdbcType="INTEGER"/>
        <result column="it_is_public" property="itIsPublic" jdbcType="INTEGER"/>
        <result column="agree_platform_help" property="agreePlatformHelp" jdbcType="INTEGER"/>
        <result column="HeadImage" property="headImage" jdbcType="VARCHAR"/>
        <result column="RecommendNoLower" property="recommendNoLower" jdbcType="VARCHAR"/>
        <result column="RecommendNoUpper" property="recommendNoUpper" jdbcType="VARCHAR"/>
        <result column="RecommendInfo" property="recommendInfo" jdbcType="VARCHAR"/>
        <result column="value" property="value" jdbcType="DECIMAL"/>
        <result column="interviewTime" property="interviewTime" jdbcType="DATE"/>
        <result column="registerTime" property="registerTime" jdbcType="DATE"/>
        <result column="noSingUp" property="noSingUp" jdbcType="INTEGER"/>
        <collection property="rebat" resultMap="rebaterecord" ofType="com.nado.rlzy.db.pojo.HrRebaterecord"/>
        <collection property="chapter" resultMap="chapterMap" ofType="com.nado.rlzy.db.pojo.HrBriefchapter"/>
        <collection property="deliveryrecord" resultMap="deliveryrecord"
                    ofType="com.nado.rlzy.db.pojo.HrSignupDeliveryrecord"/>
    </resultMap>
    <resultMap id="deliveryrecord" type="com.nado.rlzy.db.pojo.HrSignupDeliveryrecord">
        <result column="job_status" property="jobStatus" jdbcType="INTEGER"/>
        <result column="brief_chapter_id" property="briefChapterId" jdbcType="INTEGER"/>

    </resultMap>
    <resultMap id="rebaterecord" type="com.nado.rlzy.db.pojo.HrRebaterecord">
        <result column="rebateOne" property="rebateOne" jdbcType="TIMESTAMP"/>
        <result column="RebateType" property="rebateType" jdbcType="INTEGER"/>
        <result column="RebateTime" property="rebateTime" jdbcType="DATE"/>
        <result column="RebateMale" property="rebateMale" jdbcType="DECIMAL"/>
        <result column="RebateFemale" property="rebateFemale" jdbcType="DECIMAL"/>
        <result column="BriefChapterId" property="briefchapterId" jdbcType="INTEGER"/>
        <result column="status" property="status" jdbcType="INTEGER"/>
        <result column="CreateTime" property="createTime" jdbcType="DATE"/>
        <result column="rebateId" property="id" jdbcType="INTEGER"/>
    </resultMap>
    <resultMap id="chapterMap" type="com.nado.rlzy.db.pojo.HrBriefchapter">
        <result column="brief_chapter_id" property="id" jdbcType="INTEGER"/>

    </resultMap>
    <insert id="insertSe" parameterType="com.nado.rlzy.db.pojo.HrSignUp">
        insert into hr_signup
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="id != null">
                id,
            </if>
            <if test="userId != null">
                user_id,
            </if>
            <if test="groupId != null">
                group_id,
            </if>
            <if test="briefChapterId != null">
                brief_chapter_id,
            </if>
            <if test="userName != null">
                user_name,
            </if>
            <if test="sex != null">
                sex,
            </if>
            <if test="idCard != null">
                id_card,
            </if>
            <if test="education != null">
                education,
            </if>
            <if test="graduationTime != null">
                graduation_time,
            </if>
            <if test="profession != null">
                profession,
            </if>
            <if test="arrivalTime != null">
                arrival_time,
            </if>
            <if test="expectedSalaryUpper != null">
                expected_salary_upper,
            </if>
            <if test="expectedSalaryLower != null">
                expected_salary_lower,
            </if>
            <if test="enterTime != null">
                enter_time,
            </if>
            <if test="jobStatus != null">
                job_status,
            </if>
            <if test="noPassReason != null">
                no_pass_reason,
            </if>
            <if test="deleteFlag != null">
                delete_flag,
            </if>
            <if test="registrationPositionId != null">
                registration_position_id,
            </if>
            <if test="age != null">
                age,
            </if>
            <if test="relation != null">
                relation,
            </if>
            <if test="null != itIsPublic">
                it_is_public,
            </if>
            <if test="null != agreePlatformHelp">
                agree_platform_help,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="id != null">
                #{id,jdbcType=INTEGER},
            </if>
            <if test="userId != null">
                #{userId,jdbcType=INTEGER},
            </if>
            <if test="groupId != null">
                #{groupId,jdbcType=INTEGER},
            </if>
            <if test="briefChapterId != null">
                #{briefChapterId,jdbcType=INTEGER},
            </if>
            <if test="userName != null">
                #{userName,jdbcType=VARCHAR},
            </if>
            <if test="sex != null">
                #{sex,jdbcType=INTEGER},
            </if>
            <if test="idCard != null">
                #{idCard,jdbcType=VARCHAR},
            </if>
            <if test="education != null">
                #{education,jdbcType=VARCHAR},
            </if>
            <if test="graduationTime != null">
                #{graduationTime,jdbcType=DATE},
            </if>
            <if test="profession != null">
                #{profession,jdbcType=VARCHAR},
            </if>
            <if test="arrivalTime != null">
                #{arrivalTime,jdbcType=DATE},
            </if>
            <if test="expectedSalaryUpper != null">
                #{expectedSalaryUpper,jdbcType=VARCHAR},
            </if>
            <if test="expectedSalaryLower != null">
                #{expectedSalaryLower,jdbcType=VARCHAR},
            </if>
            <if test="enterTime != null">
                #{enterTime,jdbcType=TIMESTAMP},
            </if>
            <if test="jobStatus != null">
                #{jobStatus,jdbcType=INTEGER},
            </if>
            <if test="noPassReason != null">
                #{noPassReason,jdbcType=INTEGER},
            </if>
            <if test="deleteFlag != null">
                #{deleteFlag,jdbcType=TINYINT},
            </if>
            <if test="registrationPositionId != null">
                #{registrationPositionId,jdbcType=INTEGER},
            </if>
            <if test="age != null">
                #{age,jdbcType=INTEGER},
            </if>
            <if test="relation != null">
                #{relation,jdbcType=INTEGER},
            </if>
            <if test="null != itIsPublic">
                #{itIsPublic},
            </if>
            <if test="null != agreePlatformHelp">
                #{agreePlatformHelp}
            </if>
        </trim>
    </insert>

    <update id="updateBy">
        update hr_signup
        <set>
            <if test="userId != null">
                user_id = #{userId,jdbcType=INTEGER},
            </if>
            <!--  <if test="groupId != null">
                  group_id = #{groupId,jdbcType=INTEGER},
              </if>-->
            <if test="briefChapterId != null">
                brief_chapter_id = #{briefChapterId,jdbcType=INTEGER},
            </if>
            <if test="userName != null">
                user_name = #{userName,jdbcType=VARCHAR},
            </if>
            <if test="sex != null">
                sex = #{sex,jdbcType=INTEGER},
            </if>
            <if test="idCard != null">
                id_card = #{idCard,jdbcType=VARCHAR},
            </if>
            <if test="education != null">
                education = #{education,jdbcType=VARCHAR},
            </if>
            <if test="graduationTime != null">
                graduation_time = #{graduationTime,jdbcType=DATE},
            </if>
            <if test="profession != null">
                profession = #{profession,jdbcType=VARCHAR},
            </if>
            <if test="arrivalTime != null">
                arrival_time = #{arrivalTime,jdbcType=DATE},
            </if>
            <if test="expectedSalaryUpper != null">
                expected_salary_upper = #{expectedSalaryUpper,jdbcType=VARCHAR},
            </if>
            <if test="expectedSalaryLower != null">
                expected_salary_lower = #{expectedSalaryLower,jdbcType=VARCHAR},
            </if>
            <if test="enterTime != null">
                enter_time = #{enterTime,jdbcType=TIMESTAMP},
            </if>
            <if test="jobStatus != null">
                job_status = 0,
            </if>
            <if test="noPassReason != null">
                no_pass_reason = #{noPassReason,jdbcType=INTEGER},
            </if>
            <if test="deleteFlag != null">
                delete_flag = #{deleteFlag,jdbcType=TINYINT},
            </if>
            <if test="registrationPositionId != null">
                registration_position_id = #{registrationPositionId,jdbcType=INTEGER},
            </if>
            <if test="age != null">
                age = #{age,jdbcType=INTEGER},
            </if>
            <if test="relation != null">
                relation = #{relation,jdbcType=INTEGER},
            </if>
        </set>
        where
        delete_flag = 0
        <if test="null != userId">
            and user_id = #{userId}
        </if>
    </update>
    <update id="updatePesronInformation" parameterType="com.nado.rlzy.db.pojo.HrSignUp">
        update hr_signup
        <set>
            <if test="userId != null">
                user_id = #{userId,jdbcType=INTEGER},
            </if>
            <if test="groupId != null">
                group_id = #{groupId,jdbcType=INTEGER},
            </if>
            <if test="briefChapterId != null">
                brief_chapter_id = #{briefChapterId,jdbcType=INTEGER},
            </if>
            <if test="userName != null">
                user_name = #{userName,jdbcType=VARCHAR},
            </if>
            <if test="sex != null">
                sex = #{sex,jdbcType=INTEGER},
            </if>
            <if test="idCard != null">
                id_card = #{idCard,jdbcType=VARCHAR},
            </if>
            <if test="education != null">
                education = #{education,jdbcType=VARCHAR},
            </if>
            <if test="graduationTime != null">
                graduation_time = #{graduationTime,jdbcType=DATE},
            </if>
            <if test="profession != null">
                profession = #{profession,jdbcType=VARCHAR},
            </if>
            <if test="arrivalTime != null">
                arrival_time = #{arrivalTime,jdbcType=DATE},
            </if>
            <if test="expectedSalaryUpper != null">
                expected_salary_upper = #{expectedSalaryUpper,jdbcType=VARCHAR},
            </if>
            <if test="expectedSalaryLower != null">
                expected_salary_lower = #{expectedSalaryLower,jdbcType=VARCHAR},
            </if>
            <if test="enterTime != null">
                enter_time = #{enterTime,jdbcType=TIMESTAMP},
            </if>
            <if test="jobStatus != null">
                job_status = #{jobStatus,jdbcType=INTEGER},
            </if>
            <if test="noPassReason != null">
                no_pass_reason = #{noPassReason,jdbcType=INTEGER},
            </if>
            <if test="deleteFlag != null">
                delete_flag = #{deleteFlag,jdbcType=TINYINT},
            </if>
            <if test="registrationPositionId != null">
                registration_position_id = #{registrationPositionId,jdbcType=INTEGER},
            </if>
            <if test="age != null">
                age = #{age,jdbcType=INTEGER},
            </if>
            <if test="relation != null">
                relation = #{relation,jdbcType=INTEGER},
            </if>
        </set>
        where delete_flag = 0
        <if test="null != userId">
            and user_id = #{userId}
        </if>
    </update>


    <update id="invitationToRegister">
        update hr_signup_deliveryrecord sd, hr_signup si
        <set>
            sd.job_status = 5
            <where>
                si.delete_flag = 0
                and si.id = sd.signup_id
                and sd.delete_flag = 0
                <if test="null != signUpId">
                    and si.id = #{signUpId}
                </if>
            </where>
        </set>
    </update>
    <update id="notSuitable">
        update hr_signup_deliveryrecord sd, hr_signup si
        <set>
            sd.job_status = 4
            <where>
                si.delete_flag = 0
                and sd.delete_flag = 0
                and si.id = sd.signup_id
                <if test="null != signUpId">
                    and si.id = #{signUpId}
                </if>
            </where>
        </set>
    </update>
    <update id="invitationInterview">
        update hr_signup_deliveryrecord sd, hr_signup si
        <set>
            sd.job_status = 7
            <where>
                sd.delete_flag = 0
                and si.delete_flag = 0
                and si.id = sd.signup_id
                <if test="null != signUpId">
                    and si.id = #{signUpId}
                </if>
            </where>
        </set>
    </update>

    <!--<update id="updateJobStatusByTask">
        update hr_signup_deliveryrecord sd, hr_signup si
        <set>
            sd.job_status = 10
            <where>
                si.delete_flag = 0
                and sd.delete_flag = 0``
                and si.id = sd.signup_id
                <if test="null != signUpId">
                    and si.id in
                    <foreach collection="id" item="item" separator="," open="(" close=")">
                        #{item}
                    </foreach>
                </if>
            </where>
        </set>
    </update>-->

    <update id="updateJobStatusInterviewed">
        update hr_signup_deliveryrecord sd, hr_signup si
        <set>
            sd.job_status = 8
            <where>
                sd.delete_flag = 0
                and si.delete_flag = 0
                and si.id = sd.signup_id
                <if test="null != signUpId">
                    and si.id = #{signUpId}
                </if>
            </where>
        </set>

    </update>
    <update id="updateJobStatus">
        update hr_signup_deliveryrecord sd, hr_signup si
        <set>
            sd.job_status = 10
            <where>
                sd.delete_flag = 0
                and si.delete_flag = 0
                and si.id = sd.signup_id
                <if test="null != signUpId">
                    and si.id = #{signUpId}
                </if>
            </where>
        </set>
    </update>
    <update id="updateJobStatusConfirmationReport">
        update hr_signup_deliveryrecord sd, hr_signup si
        <set>
            sd.job_status = 11
            <where>
                sd.delete_flag = 0
                and si.delete_flag = 0
                and si.id = sd.signup_id
                <if test="null != signUpId">
                    and si.id = #{signUpId}
                </if>
            </where>
        </set>
    </update>
    <update id="updateJobStatusConfirmationReportByTask">
        update hr_signup_deliveryrecord sd, hr_signup si
        <set>
            sd.job_status = 11
            <where>
                sd.delete_flag = 0
                and si.delete_flag = 0
                and si.id = sd.signup_id
                <if test="null != signUpId">
                    and si.id in
                    <foreach collection="list" item="item" separator="," open="(" close=")">
                        #{item}
                    </foreach>
                </if>
            </where>
        </set>
    </update>
    <update id="updateJobStatusReport">
        update hr_signup_deliveryrecord sd, hr_signup si
        <set>
            sd.job_status = 9
            <where>
                sd.delete_flag = 0
                and si.delete_flag = 0
                and si.id = sd.signup_id
                <if test="null != signUpId">
                    and si.id = #{signUpId}
                </if>
            </where>
        </set>
    </update>
    <update id="waitingForCommissionToBecomeARebate">
        update hr_rebaterecord
        <set>
            status = 1
            <where>
                DeleteFlag = 0 and status = 0
            </where>
        </set>
    </update>
    <update id="reportNotSuitable">
        update hr_signup_deliveryrecord sd, hr_signup si
        <set>
            sd.job_status = 4
            <where>
                sd.delete_flag = 0
                and si.delete_flag = 0
                and si.id = sd.signup_id
                <if test="null != signUpId">
                    and si.id = #{signUpId}
                </if>
                <if test="null != briefChapterId">
                    and sd.brief_chapter_id = #{briefChapterId}
                </if>


            </where>
        </set>
    </update>
    <update id="recruitmentDetailsInvitationInterview">
        update hr_signup_deliveryrecord sd, hr_signup si
        <set>
            sd.job_status = 7
            <where>
                sd.delete_flag = 0
                and si.delete_flag = 0
                and si.id = sd.signup_id
                <if test="null != signUpId">
                    and si.id = #{signUpId}
                </if>
                <if test="null != briefChapterId">
                    and sd.brief_chapter_id = #{briefChapterId}
                </if>
            </where>
        </set>
    </update>
    <update id="recruitmentDetailsDirectAdmission">
        update hr_signup_deliveryrecord sd, hr_signup si
        <set>
            sd.job_status = 2
            <where>
                sd.delete_flag = 0
                and si.delete_flag = 0
                and si.id = sd.signup_id
                <if test="null != signUpId">
                    and si.id = #{signUpId}
                </if>
                <if test="null != briefChapterId">
                    and sd.brief_chapter_id = #{briefChapterId}
                </if>
            </where>
        </set>
    </update>
    <update id="recruitmentInterviewd">
        update hr_signup_deliveryrecord sd, hr_signup si
        <set>
            sd.job_status = 10
            <where>
                sd.delete_flag = 0
                and si.delete_flag = 0
                and si.id = sd.signup_id
                <if test="null != signUpId">
                    and si.id = #{signUpId}
                </if>
                <if test="null != briefChapterId">
                    and sd.brief_chapter_id = #{briefChapterId}
                </if>
            </where>
        </set>
    </update>
    <update id="recruitmentNoInterviewd">
        update hr_signup_deliveryrecord sd, hr_signup si
        <set>
            sd.job_status = 8
            <where>
                sd.delete_flag = 0
                and si.delete_flag = 0
                and si.id = sd.signup_id
                <if test="null != signUpId">
                    and si.id = #{signUpId}
                </if>
                <if test="null != briefChapterId">
                    and sd.brief_chapter_id = #{briefChapterId}
                </if>

            </where>
        </set>
    </update>
    <update id="noReportedReason">
        update hr_signup_deliveryrecord sd, hr_signup si
        <set>
            <if test="null != reason">
                sd.no_report_reason = #{reason}

            </if>
            <where>
                sd.delete_flag = 0
                and si.delete_flag = 0
                and si.id = sd.signup_id
                <if test="null != signUpId">
                    and si.id = #{signUpId}
                </if>
                <if test="null != briefChapterId">
                    and sd.brief_chapter_id = #{briefChapterId}
                </if>
            </where>
        </set>
    </update>

    <update id="confirmRegistration">
        update hr_signup_deliveryrecord sd, hr_signup si
        <set>
            sd.job_status = 0
        </set>
        <where>
            sd.delete_flag = 0
            and si.delete_flag = 0
            and si.id = sd.signup_id
            <if test="null != briefChapterId">
                and sd.brief_chapter_id = #{briefChapterId}
            </if>
            and si.id in
            <foreach collection="id" item="item" open="(" separator="," close=")">
                #{item}
            </foreach>
        </where>
    </update>
    <update id="rebateOne">
        update hr_rebaterecord
        <set>
            status = 1
            <where>
                DeleteFlag = 0
                <if test="null != rebateId">
                    and Id = #{rebateId}
                </if>
            </where>

        </set>
    </update>
    <update id="rebateAdd" parameterType="com.nado.rlzy.bean.query.RebateQuery">
        update hr_acct
        <set>
            AcctBalance = (AcctBalance + #{addMoney} )
            <where>
                DeleteFlag = 0
                <if test="null != userId">
                    and UserId = #{userId}
                </if>
                <if test="null != signUpId">
                    and sign_up_id = #{signUpId}
                </if>
            </where>
        </set>
    </update>
    <update id="rebateSubtraction" parameterType="com.nado.rlzy.bean.query.RebateQuery">
        update hr_acct
        <set>
            IceBalance = (IceBalance - #{subtraction})
            <where>
                DeleteFlag = 0
                <if test="null != userId">
                    and UserId = #{userId}
                </if>
                <if test="null!= signUpId">
                    and sign_up_id = #{signUpId}
                </if>

            </where>

        </set>
    </update>


    <select id="selectJobListOverview" resultMap="BaseResultMap"
            parameterType="com.nado.rlzy.bean.query.JobListQuery">

        select s.user_name,
        s.id as id,
        s.age as age,
        u.UserName as commendName,
        u.type,
        sd.job_status,
        s.arrival_time,
        ifnull(b.id, '0') as noSingUp,
        (SELECT GROUP_CONCAT(d.name)
        FROM hr_dictionary_item d
        WHERE FIND_IN_SET(d.value, s.relation)
        and d.pId = 4) as relation,
        from hr_signup s
        left join hr_user u on s.user_id = u.Id and u.DeleteFlag = 0
        left join hr_signup_deliveryrecord sd on s.id = sd.signup_id and sd.delete_flag = 0
        left join hr_briefchapter b on sd.brief_chapter_id = b.Id and b.briefChapterStatus = 0
        <where>
            s.delete_flag = 0
            <if test="null != sex">
                and s.sex = #{sex}
            </if>
            <if test="null != education and '' != education">
                and s.education = #{education}
            </if>
            <if test="null != profession and '' != profession">
                and s.profession = #{profession}
            </if>
            <if test="null != age and '' != age">
                and s.age = #{age}
            </if>

            <if test="null != arrivalTime">
                and s.arrival_time between now() and adddate(now(), interval #{arrivalTime} day)
            </if>
            <if test="null != graduationTime">
                and YEAR(graduation_time) = YEAR(DATE_SUB(NOW(), INTERVAL #{graduationTime} YEAR))
            </if>

            <if test="null != graduationTime and graduationTime == 3">
                and YEAR(graduation_time) &lt;= YEAR(DATE_SUB(NOW(), INTERVAL #{graduationTime} YEAR))
            </if>
            <if test="null != relation">
                and s.relation = #{relation}
            </if>
        </where>


    </select>
    <select id="selectJobList" resultType="com.nado.rlzy.bean.dto.JobListDto"
            parameterType="com.nado.rlzy.bean.query.JobListQuery">
        select s.user_name as userName,
        s.id as signUpId,
        s.user_id as userId,
        s.sex as sex,
        s.id_card as cardId,
        s.education as education,
        s.arrival_time as arrivalTime,
        s.graduation_time as graduationTime,
        s.expected_salary_lower as expectedSalaryLower,
        s.expected_salary_upper as expectedSalaryUpper,
        sd.job_status as jobStatus,
        ifnull(b.Id, 0) as noSignUp,
        s.relation as relation,
        sd.brief_chapter_id as briefChapterId,
        b.Id as briefChapterId,
        dii.name as postName
        FROM hr_signup s
        LEFT JOIN hr_signup_deliveryrecord sd
        ON s.id = sd.signup_id and sd.delete_flag = 0
        LEFT JOIN hr_briefchapter b
        ON sd.brief_chapter_id = b.Id and
        b.briefChapterStatus = 0
        LEFT JOIN hr_dictionary_item dii
        ON b.PostId = dii.value and dii.status = 1 and pId = 1
        where
        s.delete_flag = 0
        <if test="null != id">
            and s.id = #{id}
        </if>
        group by s.user_name


    </select>
    <select id="selectCollectListOverview" resultMap="BaseResultMap">
        select s.user_name,
        s.age,
        u.UserName as commendName,
        sd.job_status,
        s.arrival_time,
        s.id,
        IFNULL(b.id, '0') as noSignUp,
        u.type,
        s.relation,
        (SELECT GROUP_CONCAT(d.name)
        FROM hr_dictionary_item d
        WHERE FIND_IN_SET(d.value, s.relation)
        and d.pId = 4) as relation
        from collect c
        left join hr_signup s on c.sign_up_id = s.id and s.delete_flag = 0
        left join hr_signup_deliveryrecord sd on s.id = sd.signup_id and sd.delete_flag = 0
        left join hr_user u on c.user_id = u.Id and u.DeleteFlag = 0
        left join hr_briefchapter b on c.briefchapter_id = b.Id and b.briefChapterStatus = 0
        where c.delete_flag = 0
        <if test="null != userId">
            and u.Id = #{userId}
        </if>
        and c.sign_up_id is not null order by c.create_time desc
    </select>
    <select id="selectCollectList" resultMap="BaseResultMap">
       select dii.name,
       s.user_name             as userName,
       s.sex                   as sex,
       s.id_card               as cardId,
       s.education             as education,
       s.arrival_time          as arrivalTime,
       s.graduation_time       as graduationTime,
       s.expected_salary_lower as expectedSalaryLower,
       s.expected_salary_upper as expectedSalaryUpper,
       sd.job_status           as jobStatus,
       ifnull(b.Id, 0)         as noSignUp,
       s.relation              as relation
        from collect c
                 left join hr_signup s on c.sign_up_id = s.id
                 left join hr_signup_deliveryrecord sd on s.id = sd.signup_id and sd.delete_flag = 0
                 left join hr_user u on c.user_id = u.Id and u.DeleteFlag = 0
                 left join hr_briefchapter b on c.briefchapter_id = b.Id and b.briefChapterStatus = 0
                 left join hr_dictionary_item dii on b.PostId = dii.value and dii.status = 1 and dii.pId = 1
        where c.delete_flag = 0
    </select>
    <select id="selectSignUpTable" resultMap="BaseResultMap">
        select msut.id,
        hsd.brief_chapter_id,
        hsd.id as hsdId,
        s.user_name,
        s.sex,
        s.id_card,
        s.education,
        s.graduation_time,
        s.profession,
        s.arrival_time,
        s.expected_salary_upper,
        s.expected_salary_lower,
        s.relation,
        s.it_is_public,
        s.agree_platform_help,
        (SELECT GROUP_CONCAT(d.name)
        FROM hr_dictionary_item d
        WHERE FIND_IN_SET(d.value, s.registration_position_id)
        and d.pId = 1) as Name,
        s.id as signId,
        s.user_id,
        hsd.brief_chapter_id
        from my_sign_up_table msut,
        my_sign_up_table_sign_up msutsu,
        hr_signup s,
        hr_signup_deliveryrecord hsd,
        hr_user u,
        hr_briefchapter br
        where msut.id = msutsu.my_sign_up_table_id
        and msutsu.delete_time = 0
        and msutsu.sign_up_id = s.id
        and s.id = hsd.signup_id
        and hsd.delete_flag = 0
        and s.delete_flag = 0
        and s.user_id = u.Id
        and u.DeleteFlag = 0
        and br.Id = hsd.brief_chapter_id
        and br.briefChapterStatus = 0
        <if test="null != signId">
            and s.id = #{signId}
        </if>
        <if test="null != userId">
            and s.user_id = #{userId}

        </if>


    </select>
    <select id="selectSignUp" resultMap="BaseResultMap">
        select s.user_name, s.user_id, msut.sign_id as signId from my_sign_up_table msut
        left join hr_signup s on msut.sign_id = s.id
        <where>
            <if test="null != userId">
                s.user_id = #{userId}
            </if>
        </where>
    </select>


    <select id="searchSignUpUserName" resultMap="BaseResultMap">
        select si.user_name,
        u.UserName as userName,
        si.id
        from hr_signup si
        left join hr_signup_deliveryrecord sd on si.id = sd.signup_id and sd.delete_flag = 0
        left join hr_user u on si.user_id = u.Id and u.DeleteFlag = 0
        left join hr_briefchapter br on br.id = sd.brief_chapter_id and br.briefChapterStatus = 0
        <where>
            si.delete_flag = 0
            <if test="null != briefChapterId">
                and br.Id = #{briefChapterId}
            </if>
            <if test="null != userId">
                and u.id = #{userId}
            </if>
        </where>

    </select>
    <select id="querySignUpUserName" resultMap="BaseResultMap">
        select distinct s.user_name
        from hr_signup s
        left join hr_user u on s.user_id = u.Id
        <where>
            s.delete_flag = 0
            <if test="null != type">
                and u.type = #{type}

            </if>
            <if test="null != userId">
                and u.Id = #{userId}
            </if>
        </where>
    </select>
    <select id="querySignUpStatus" resultMap="BaseResultMap">
        select sd.job_status,
        sd.brief_chapter_id,
        si.user_name,
        sd.signup_id
        from hr_signup si
        inner join hr_signup_deliveryrecord sd on si.id = sd.signup_id and sd.delete_flag = 0
        inner join hr_user u on si.user_id = u.id and u.DeleteFlag = 0
        <where>
            si.delete_flag = 0
            <if test="null != jobUserName">
                and si.user_name = #{jobUserName}
            </if>
        </where>
    </select>
    <select id="countSignUpNum" resultMap="BaseResultMap">
        select hsd.brief_chapter_id, si.id
        from hr_signup_deliveryrecord hsd
        left join hr_signup si on hsd.signup_id = si.id and hsd.delete_flag = 0
        left join hr_briefchapter br on hsd.brief_chapter_id = br.Id and br.briefChapterStatus = 0
        where hsd.delete_flag = 0
        <if test="null != briefchapter">
            and br.Id = #{briefchapter}
        </if>
        group by si.id
    </select>
    <select id="SearchdirectAdmission" resultMap="BaseResultMap">
        select
        <if test="sex == 1">
            re.RebateMale as value,
        </if>
        <if test="sex == 0">
            re.RebateFemale as value,
        </if>
        br.interviewTime
        from hr_signup si
        left join hr_signup_deliveryrecord sd on si.id = sd.signup_id and sd.delete_flag = 0
        <if test="null != briefchapter">
            and sd.brief_chapter_id = #{briefchapter}
        </if>
        left join hr_rebaterecord re on sd.brief_chapter_id = re.BriefChapterId and re.DeleteFlag = 0
        left join hr_briefchapter br on sd.brief_chapter_id = br.Id and br.briefChapterStatus = 0
        <where>
            si.delete_flag = 0
            <if test="null != signUpId">
                and si.id = #{signUpId}
            </if>
            and re.RebateType = 0;
        </where>

    </select>
    <select id="recruitmentDetailsOverview" resultMap="BaseResultMap">
        select s.user_name,
        s.user_name as ben_ren,
        s.age,
        s.arrival_time,
        u.UserName,
        s.agree_platform_help,
        b.interviewTime,
        b.registerTime,
        r.RebateTime,
        r.status,
        sd.no_pass_reason,
        s.id,
        sd.job_status,
        r.CreateTime,
        s.sex,
        r.RebateType,
        s.user_id
        from hr_signup s
        left join hr_signup_deliveryrecord sd on s.id = sd.signup_id and sd.delete_flag = 0
        left join hr_user u on s.user_id = u.Id and u.DeleteFlag = 0
        left join hr_briefchapter b on sd.brief_chapter_id = b.Id and b.briefChapterStatus = 0
        left join hr_rebaterecord r on sd.brief_chapter_id = r.BriefChapterId and r.DeleteFlag = 0
        <where>
            s.delete_flag = 0
            and sd.job_status in
            <if test="null != list">
                <foreach collection="list" item="item" separator="," open="(" close=")">
                    #{item}
                </foreach>
            </if>
            order by r.CreateTime desc
        </where>
    </select>
    <select id="signUpId" resultMap="BaseResultMap">
        select si.id from hr_signup si
        left join hr_signup_deliveryrecord sd on si.id = sd.signup_id and sd.delete_flag = 0 and sd.job_status = 1
        <where>
            si.delete_flag = 0
        </where>
    </select>
    <select id="signUpIdByReport" resultMap="BaseResultMap">
        select si.id from hr_signup si
        left join hr_signup_deliveryrecord sd on si.id = sd.signup_id and sd.delete_flag = 0 and sd.job_status = 2
        <where>
            si.delete_flag = 0
        </where>
    </select>
    <select id="selectRebateTime" resultMap="BaseResultMap">
        select CreateTime from hr_rebaterecord
        <where>
            DeleteFlag = 0 and status = 1
        </where>


    </select>
    <select id="recruitmentInterviewOver" resultType="com.nado.rlzy.db.pojo.HrSignUp">
        select
        b.registerTime
        from hr_signup s
        left join hr_signup_deliveryrecord sd on s.id = sd.signup_id and sd.delete_flag = 0
        left join hr_user u on s.user_id = u.Id and u.DeleteFlag = 0
        left join hr_briefchapter b on sd.brief_chapter_id = b.Id and b.briefChapterStatus = 0
        left join hr_rebaterecord r on sd.brief_chapter_id = r.BriefChapterId and r.status = 0 and r.DeleteFlag = 0
        <where>
            s.delete_flag = 0
            order by r.CreateTime desc
        </where>
    </select>
    <select id="rebate" resultMap="BaseResultMap">
        select re.status,
        re.RebateFemale,
        re.RebateMale,
        re.CreateTime,
        re.RebateType,
        si.id,
        si.user_id,
        re.Id as rebateId
        from hr_rebaterecord re
        left join hr_briefchapter br on re.BriefChapterId = br.id and br.briefChapterStatus = 0
        left join hr_signup_deliveryrecord sd on br.Id = sd.brief_chapter_id and sd.delete_flag = 0
        left join hr_signup si on sd.signup_id = si.id and si.delete_flag = 0
        left join hr_user u on si.user_id = u.Id and si.delete_flag = 0
        <where>
            re.DeleteFlag = 0
            <if test="null != signUpId">
                and si.id = #{signUpId}
            </if>
            order by re.CreateTime asc
        </where>
    </select>

    <select id="grouper" resultMap="BaseResultMap">
        select si.user_name, si.id, mt.group_name
        from hr_signup si
        left join my_sign_up_table_sign_up msutsu on si.id = msutsu.sign_up_id and msutsu.delete_time = 0
        left join my_sign_up_table mt on mt.id = msutsu.my_sign_up_table_id and mt.delete_flag = 0
        left join hr_user u on si.user_id = u.Id and u.DeleteFlag = 0

        <where>
            si.delete_flag = 0
            <if test="null != groupName">
                and mt.group_name = #{groupName}
            </if>
            <if test="null != signUpName">
                and si.user_name like concat('%', #{signUpName}, '%')
            </if>
            <if test="null != userId">
                and u.id = #{userId}
            </if>
        </where>

    </select>
    <select id="selectSignUpTableBySignUpName" resultMap="BaseResultMap">
        select si.user_name, si.id, mt.group_name
        from my_sign_up_table_sign_up msutsu
        left join my_sign_up_table mt on mt.id = msutsu.my_sign_up_table_id and mt.delete_flag = 0
        left join hr_signup si on msutsu.sign_up_id = si.id and si.delete_flag = 0
        left join hr_user u on si.user_id = u.Id and u.DeleteFlag = 0
        <where>
            msutsu.delete_time = 0
            <if test="null != signUpName">
                and si.user_name like concat('%', #{signUpName}, '%')
            </if>
            <if test="null != userId">
                and u.id = #{userId}
            </if>
        </where>
    </select>
    <select id="queryComplaintPerson" resultType="com.nado.rlzy.bean.dto.ComplaintPage">
        select si.user_name as signName,
        si.id
        from hr_signup si
        left join hr_signup_deliveryrecord sd on si.id = sd.signup_id and sd.delete_flag = 0
        left join hr_user u on si.user_id = u.Id and u.DeleteFlag = 0
        left join hr_briefchapter br on br.id = sd.brief_chapter_id and br.briefChapterStatus = 0
        where si.delete_flag = 0
        <if test="null != brieId">
            and br.id = #{brieId}
        </if>
        <if test="null != typeId">
            and u.type = #{typeId}
        </if>
        <if test="null != userId">
            and u.id = #{userId}
        </if>
    </select>
    <select id="queryAll" resultMap="BaseResultMap">
        select si.sex,
        si.age,
        si.arrival_time,
        si.graduation_time,
        si.expected_salary_lower,
        si.expected_salary_upper,
        (SELECT GROUP_CONCAT(d.name)
        FROM hr_dictionary_item d
        WHERE FIND_IN_SET(d.value, si.education)
        and d.pId = 2) as education,
        (SELECT GROUP_CONCAT(d.name)
        FROM hr_dictionary_item d
        WHERE FIND_IN_SET(d.value, si.registration_position_id)
        and d.pId = 1) as registrationPosition,
        si.registration_position_id
        from hr_signup si
        left join hr_user u on si.user_id = u.Id
        <where>
            <if test="null != userId">
                si.user_id = #{userId}
            </if>
            <if test="null != type">
                and u.type = #{type}
            </if>
            and si.delete_flag = 0
        </where>

    </select>
    <select id="threeNoInterview" resultMap="BaseResultMap">
        select hsd.job_status
        from hr_signup si
        left join hr_signup_deliveryrecord hsd on si.id = hsd.signup_id and hsd.delete_flag = 0
        where si.delete_flag = 0
        <if test="null != signId">
            and si.id = #{signId}
        </if>
        order by hsd.create_time desc
        limit 0, 3;
    </select>

</mapper>