

#数据库连接池
spring.datasource.driver-class-name=com.mysql.jdbc.Driver
spring.datasource.url=jdbc:mysql://47.96.126.70:3306/rlzy?allowMultiQueries=true&useUnicode=true&characterEncoding=UTF-8
spring.datasource.username=renlizy
spring.datasource.password=renlizy8inc
spring.datasource.type=com.alibaba.druid.pool.DruidDataSource
# 下面为连接池的补充设置，应用到上面所有数据源中
# 初始化大小，最小，最大
#spring.datasource.druid.initialSize=5
#spring.datasource.druid.minIdle=5
#spring.datasource.druid.maxActive=20
# 配置获取连接等待超时的时间
#spring.datasource.druid.maxWait=60000
# 配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位是毫秒
#spring.datasource.druid.timeBetweenEvictionRunsMillis=60000
# 配置一个连接在池中最小生存的时间，单位是毫秒
#spring.datasource.druid.minEvictableIdleTimeMillis=300000
#spring.datasource.druid.validationQuery=SELECT 1 FROM t_user
#spring.datasource.druid.testWhileIdle=true
#spring.datasource.druid.testOnBorrow=true
#spring.datasource.druid.testOnReturn=false
# 打开PSCache，并且指定每个连接上PSCache的大小
#spring.datasource.druid.poolPreparedStatements=true
#spring.datasource.druid.maxPoolPreparedStatementPerConnectionSize=20
# 配置监控统计拦截的filters，去掉后监控界面sql无法统计，'wall'用于防火墙
#spring.datasource.druid.filters=stat,wall,log4j
# 通过connectProperties属性来打开mergeSql功能；慢SQL记录
#spring.datasource.druid.connectionProperties=druid.stat.mergeSql=true;druid.stat.slowSqlMillis=5000
# 合并多个DruidDataSource的监控数据
#spring.datasource.druid.useGlobalDataSourceStat=true
#logging.level.com.nado.rlzy.db.mapper=debug
#mybatis.configLocations= classpath:mybatis.xml
#mybatis.mapper-locations=classpath:mapper/*.xml
#type-aliases-package=com.nado.rlzy.db.pojo
#mapper.mappers=com.nado.rlzy.utils.TKMapper
#mapper.identity=MYSQL
#mapper.not-empty=false
#logging.level.mapper=debug

mybatis.configLocations=classpath:mybatis.xml
mybatis.mapper-locations=classpath:mapper/*.xml
mybatis.type-aliases-package=com.nado.rlzy.db.pojo
#type-aliases-package=com.nado.rlzy.db.pojo
mapper.mappers=com.nado.rlzy.utils.TKMapper
mapper.identity=MYSQL
mapper.not-empty=false
logging.level.com.nado.rlzy.db.mapper=debug
logging.level.mapper=debug


#spring.freemarker.template-loader-path=classpath:/web/
spring.freemarker.cache=false
spring.freemarker.charset=UTF-8
spring.freemarker.check-template-location=true
spring.freemarker.content-type=text/html
spring.freemarker.expose-request-attributes=true
spring.freemarker.expose-session-attributes=true
spring.freemarker.request-context-attribute=ctx
spring.freemarker.suffix=.ftl





# REDIS (RedisProperties)
# Redis数据库索引（默认为0）
spring.redis.database=2
# Redis服务器地址spring.redis.host=192.168.136.133
spring.redis.host=192.168.136.142
spring.redis.port=6379
spring.redis.password=123456
# 连接池最大连接数（使用负值表示没有限制）   2.0区别    1.0+使用的是 spring.redis.pool.max-acitive
spring.redis.jedis.pool.max-active=8
# 连接池最大阻塞等待时间（使用负值表示没有限制） 2.0区别
spring.redis.jedis.pool.max-wait=-1
# 连接池中的最大空闲连接
spring.redis.jedis.pool.max-idle=8
# 连接池中的最小空闲连接
spring.redisjedis..pool.min-idle=0




pagehelper.helperDialect=mysql
pagehelper.reasonable=true
pagehelper.supportMethodsArguments=true
pagehelper.params=count=countSql

server.address = 0.0.0.0





